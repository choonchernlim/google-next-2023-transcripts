{
    "title": "Cloud Run and Google Kubernetes Engine (GKE) for faster application development",
    "presentation_type": "Breakout",
    "categories": [
        "Application Developers",
        "DEV211"
    ],
    "video_id": "xQAsT-0VSJA",
    "time": "Aug 29 06:00 PM - 06:45 PM CDT",
    "transcript": "[Music]my name is Drew bradstock I wanted towelcome you to our session talking abouthow gka and Cloud run can helpaccelerate application development so Iam in charge of product for bothserverless and criminal joining me todayis staran who leads product forserverless and we also have the pleasureof Brian and Cor joining us from Etsywhere they're going to tell the realstory versus the Google story of whattheir experiences are with containersnow it's really hard to believe thatit's been over 20 years since Googlecreated Borg and our own containermanagement system we've made hugestrides during that time period let mego ahead hold on one second we've madehuge strides during this time period andcrias itself is over 10 years old atthis point it's hard to imagine whatpeople did with containers before thatthat point outside of Google during thistime period we've looked at automationwe've looked at efficiency we've lookedat security such that all of you don'thave to take care of that that led us toactually add autopilot mold where muchof the work is done by Google for youstill the flexibility of ku's ecosystemand even before that we actuallypioneered with Cloud run which is theeasiest serverless offering in themarket which staren will be speakingabout later today as well now one of thethings that we're actually most proud ofis the fact you have Choice you're notlocked into either kubernetes or oneserverless product we have the optionsof cloud run which gives you the abilityto get going with containers incrediblyquickly now containers for many peoplemoving from Legacy VMS or older on-premsystems where your build systems may bea little Legacy or long in the tooth canbe really challenging this is where wefound customers have accelerated thatJourney with Cloud run because it's Ainwithout locking you into a traditionalpass and allows you to get going quicklyAdditionally you can scale up to handleany workload possible and one of thecool things we'll walk through is howeasy it is to actually move yourcontainers from cloud run to GK or fromGK to Cloud run now on the flip side ifyou don't want or if you do want to usekubernetes gka is a great option for youso Cloud run is a really fast way to getgoing containers all up and we're seeingmore and more customers actually staywith us and grow large scale deploymentslike Ikea and others but for gka ourFocus has been one make sure that weactually practice what we preach interms of our investment in open sourcefor instance in the last 60 days we'vemade more contributions to kubernetesthan many of the leading Cloud vendorshave in the history of kubernetes andthis is really where chopping wood andcarrying water and doing the hard workin EN enhancing the products based onfeedback for many of you make afundamental difference in terms ofimplementation just being easier beyondthat if you look we have actually reallyheavily optimized for new ai workloadsai as you may have heard maybe 1 to 1500times and that is a number this morninghas really changed the game but kinetesis a really good fit for this but onceagain one of the struggles we've seen isthat people don't want a Swiss armyknife of options they want to be able togrow to any size but they do want a pNation such you can get going with gpusor tpus or any of the leading AIFrameworks very quickly and that's whatwe're investing in our kuet right nowand lastly is autoscaling ha andsecurity these are all things you don'twant to have to build yourself and worryabout so we made it easy to do so nowone of the coolest things for for cloudrun is actually how easy it is to get acontainer going from having thatcontainer to live in production fullyserving traffic so we've got a nicelittle demo and thankfully to Starin andour crappy Wi-Fi across mcone soapologies for that we've got this presetup but Cloud run takes care of all thatheavy lifting for you it's very verygood with handling your trafficsplitting getting it fully deployed andit literally seconds your live witheither your new iteration or a brand newcontainer and this has led to a lot ofcompanies from the smallest startups allthe way to the largest Enterprise anddigital natives embrace ing Cloud runbecause of the speed to deploy and howwell it ties into all our developmenttools as well as the ecosystem now Cloudrun does have two major strengths one istraditional Services you may think aboutwhere it's the way you really use uhCloud run but Cloud run jobs opens up ahuge realm of batch opportunities toobecause of that great nature of zero to1,000 and th to zero and back down so Iencourage you to check it out more andobviously listen to staring in a fewminutes now near and dear to my heartI've worked on GK and CRI for many yearsnow GK standard is the product that manyin this audience use right now one ofthe cool things about it is the level ofAutomation and security we've broughtinto it to make it a lot simpler toactually get your cluster going withouthaving to do the work you may have to doon other clouds with this systemadditionally we have looked as Imentioned looking at gpus and tpus suchyou can run any AI workloads you wantand you can play the home game ofcounting how many times we mentioned AItoday but it is all a bed Simplicityevery single point of friction makesyour life more difficult so our job isto remove the difficult bits fromkubernetes and that's where we'reconstantly looking for feedback from allof you and lastly as I mentioned is howdo we have a secure really good singlecluster environment here now one of theproblems that you still have though iswhat happens if you have more than onecluster so quick show of hands how manyof you have one one or more kuesclustersokay how many of you have 10 or more uhit's exercise it's four o' quick showhands keep those hands up how many ofyou have 10 or more okay how many of youhave 50 ormore okay how many of you have a hundredor more thousand or more I was going tosay I know who's at a certain level forall our clients but it's easy to manageone it becomes really hard just like anyfleets like when we have VMS first comeout becomes harder and harder to managemore and more this is also compounded bythe complexity kuet and adding all theadd-ons so what I'm really excited toactually announce TK stole a little bitof my thunder this morning but he'sallowed that's his job it's GKEnterprise Edition this actually Buildson top of GK standard still all thefunctionality you have with the GKstandard right now remains with standardedition no changes whatsoever but whatwe've done is we built multi-teammulticluster management such you cantake a look at your fleets build anobservability build in security buildingcompliance build a config all acrossmany clusters at once be it a onecluster Fleet or literally in thethousands with some of the customersthat we're uh testing right nowadditionally of security and governanceand new functionality there looking forvulnerabilities that's all being builtto look at one cluster or many and allpart of this is actually all thefunctionality we have within anthos isnow included as part of GK EnterpriseEdition so any of you using anthos formulticloud hybrid or even on gcp allthat functionality does not go away butis now within one unified conso andexperience withingke what I'd like to do is actuallywelcome up um the Etsy folks to walkthrough their experience working withCloud run and a little bit of whatthey've seen within GK so gentlemen I'llleave you to introduce yourself my nameis Corey Samuels I'm the engineeringmanager for Etsy serviceplatform um we affectionately call theservice platform ESP so you'll hear thatreferred to in the presentation today umI'm here with our Tech lead Brian Akinand we're really excited to share alittle bit about our journey to designand build a service platform forEtsy we're going to walk you through thewhat why and how of our platform andthen we're going to dig in to what webuilt and some of the challenges andsuccesses that we encountered along theway so let's start first by answeringthe question why did Etsy need a serviceplatform so prior to moving to the cloudin2019 Etsy was primarily powered by a PHPmonolith that was in a Data Center andbecause it was in the data center wewere constrained both technically andhardware-wise as to what we were able tobuild as the company grew the need forservices grew as well and moving to thecloud enabled our Engineers to takeadvantage of new service platforms wherethey could put new Services outside ofthis core monolith which still Powersmuch of etsy's marketplacetoday this Evolution to Servicesoccurredorganically but uh very quickly we sawthat some problems were emerging we sawthat teams were duplicatinginfrastructure andScaffolding uh service attribution wasunclear sometimes ambiguous we had noCentral service catalog so Servicesweren't easily visible or evenaccessible and finally we had gaps instandards operational process andsupport ofservices so to address these problems weassembled a squad of Architects whospoke to many teams around Etsy who werewriting services and ultimately thesquad created this Vision document whichwould serve as the blueprint for howservice development would would uh whatwhat service development would look likein in the future the core principle ofthis Vision was to decouple servicewriting from the infrastructure that theservices ranon this solved two problems for us firstit freed service writers from the burdenof infrastructure and secondly itprovided us a path to introducestandards and guard rails into theservicearchitecture thanks Drew and Corey hiI'm Brian Akin but most everyone callsme Bacons uh slight bacon but plural uhI'm a senior staff engineer and I'vebeen at Etsy since May of2022 when I first started at Etsy uhthis Vision dock that Corey mentionedhad already been completed and then theservice platform teen and I join wastasked with taken that vision and makinga practical working serviceplatform uh from that Vision documentafter my initial onboarding we discussedwhat would be the success criteria for aservice platform we ask oursel how canwe best spend our time and we ask ourseloften like in a year if we look backwhat would be asuccessful um service platform we kindof came to the very obvious conclusionthat a successful service platform wouldenhance the developer experience to makeour lives easier seems obvious right butwe needed to dig a little bit deeperlike how would we know when we weresuccessful you know like how would weknow when we've reached that but thenwhat are the actual steps we need to getthere um so to do that very quickly weconducted interviews and did small proofof concepts with teams around Etsyengineering including some of the moreoperational focused teams because wewant to get that perspective as well umbecause we want to know what were theday-to-day pains in both writingservices as well as supporting thoseServices once they were in productionand we wanted like how could we create aplatform that would allow those writingservices to focus onuh their business logic while providingthe operational Foundation that allProduction Services need so that we'also uh make the lives of operators easyas well and then finally how would thisalign with this kind of architecturalVision that came from um a little bitfrom the committee there became clearfrom talking with people we had twobasic use cases that which are like heyI have a great idea how can I quicklyget that in front of custom customers byintegrated into the Etsy product andthat idea was successful how do Isupport that longterm we often say on the serviceplatform that an engineer's time andattention are the most valuable assetsthat we have at Etsy so we want to makesure that we made good use of ourEngineers time so we wanted to be ableto quickly iterate on the value that wethought that the service platform couldprovide knowing that the entireengineering organization was our kind ofyou know potential Marketplace for thisplatform and to do that we wanted tofocus on the Etsy specific parts of aservice platform we weren't looking tobuild a generic service platform for allof the world to use but for Etsy for ourengineering organization to to use andme being fairly new to the team I had torely like I say on a lot of theseinterviews and talking with people andum doing that it is a very kind of faceto-face 101 type company so theestablishing those relationships acrossengineering was very important for us toget in there and hear their story likewhat was it like when you launchsomething how did that go what do youwish had gone differently about that umso to do that we knew from the beginningthat we needed to use the highest levelservice by Google or other providersthat would allow us to focus on thatEtsy specific part of the serviceplatform we didn't really have the timenor the people we're a fairly small teamto make a whole lot of upfrontinfrastructure decisions andimplementations before we actually doveinto the actual work of building theserviceplatform while we're big fans ofofferings like gke which we've mentionedalready by using a platform like Cloudrun there were just entire classes ofproblems and decisions that we justdidn't didn't have to make you knowwhether we like that opinion or not itwas just something that we could startwith and sometimes just deciding takes alot longer than the actual doing so wegot to start off muchquicker abstraction layers are obviouslyhard but we wanted to do our best tomake sure that we didn't expose too manylowlevel details to our servicedevelopers so that they could focus onuh writing and supporting their businesslogic so we generally don't have astrong culture of Technology mandatesspecifically in terms of platforms atEtsy so it was very important for us totake that into account when we werefiguring out our strategy of how we weregoing to design and build thisplatform we could build something thatwe thought was perfect but if ourEngineers who were going to be ourfuturecustomers weren't sold on theplatform adoption would just bedifficult and the project could fail soour approach around this was to Firstassemble a team of Engineers who hadskills both in infrastructure andapplicationdevelopment after that we put threethings in place first to make sure thatwe stayed aligned to that architecturalVision that we were given we composed asmall sort of Advisory Group thatincluded two of the original architectswho had authored the vision and we metwith them weekly to discussimplementation and design details of theplatform second and to ensure that westayed true to what our customersactually needed we partnered with one ofour teams our ads team um because theywere already writing services and theywere a perfect fit for what what we wereplanning to do so one of their Engineersactually rotated into our team andhelped us build an MVP build and designthe MVP and then our Pilot service wasone of this team's services that theywere planning to build outside of theplatform so that aligned really reallywell lastly we adopted a very flexibleand adaptable road map strategy so ourteam's work on platform features andsupport would align with what ourcustomers actually needed our ourservice writingteams so our MVP was La launched at theend of last year and then we follow thatsoon after with the launch of our adsteam pilotin q1 of this year so now that we'vegiven you some historical and sort ofstrategic context of our serviceplatform let's take a look at what weactuallybuilt so ESP at itscore it's a group of components thatwe've glued together into a cohesiveservice development experience um forour developer interface we to write acustom command line tool and thatintegrates really really nicely with ourcicd workflow which is powered by GitHubactions forcommunication we standardized ongrpc and we use protuff for the uhserializationformat Etsy Engineers use a prettybroad number of languages and to helpyou know get adoption going we wanted tosupport as many as we were able to um soon the service side we support go nodeand Python and then on the client sidewe support languages that are neededaround Etsy ecosystems like PHP JavaScala Python andnode um so those clients areautomatically packaged up versioned andthen registered atartifactory and then all of the servicesare cataloged into our service catalogusingbackstage finally Google servicesplayed a critical role in thesecomponents of our platform all of ourobservability tooling is powered byGoogle cloud services and mostimportantly all of our services arerunning on cloudrun this before the launch of ESP of theservice platform each of these boxes yousee and actually the links between eachone was an a decision that a developmentteam had had to make the decision thenactually go and Implement that umtechnology to support that and oftenthey would do this uh for each servicethat uh they supported and since teamsare often fluid as you know this led toyou know like many many different waysto deploy services without muchstandardization as Corey had saidearlier it's so we wanted to avoid aone- siiz fits all approach however wedid know there were key uh featur thatwe needed to uh enable the general lifecycle of the services uh and support thedevelopers workflows and since we didn'twant to use the build it and they willcome mentality because they never comewhen you build it uh we used our Pilotservice and our partner team and the adsteam to like Drive the priorities uh andrequirements for at least initial phaseof the MBP uh we wanted to make surethat we were actually building somethingthat our users would actually use asCorey said we wrote this command linetool uh called ESP that's the primaryway in which uh developers uh interactwith the platform uh it's really awrapper on top of other tools as you canprobably imagine uh and it's just thereto provide a consistent kind of CLI uminterface rather than having to know youknow 10 different tools and everythinguh and it provides um common tasks forlike creating new Services as well asworking with services that are alreadywritten if does things like it handlesyour Proto uh generation so where yougenerate your code uh from protoc Cfiles and it also handles like runningthe service inside of a containerlocally like you would do it in Cloudrun so that you can um have a similarexperience but it also is used to rununit tests locally and those types ofthings um it also generates uh languagespecific uh container build sodevelopers never really have to dealwith Docker files uh and so we're ableto bake those best practices in thereparticularly we're working with like ourapplication security team to make surethat we get updates injected into theplatform without having to go touch youknow 10 different uh repos the serviceplatform also uh provides a smallframework for each supported servicelanguage uh we call this the runnerbecause we are or at least I am veryterrible at naming things uh we utilizecode generation a whole lot uh sometimesfor better oruh but what this framework does is allowenables developers to be able to focuson just writing like their servicemethods without having to worry aboutthings like setting upobservability uh you know like settingup a grpc server figuring out what portto listen on you know like very mundanethings but these are things that ifyou've never written a service if you'restarting from scratch that you have todo there's a good bit of ceremonyinvolved um it also provides just a baselevel of observability out of the box soyou you get pretty good you know likemetrics logging tracing and those typesof things without doing anything youknow within your service um Beyondwriting your businesslogic one of the things is we wanted todo this is this why so that a servicedeveloper can focus on writing the codeimplementing that idea like we weretalking aboutearlier but having best practices foroperational and infrastructure bakedinto the platform so that we providepretty good guard rails for most usecases just out of the box we use thesame command line tool uh in our cicdpipeline so the same tool that you'rerunning test locally that's what'srunning test and cic CD for you that waywe just have some consistency uh betweenthe two uh hopefully this uh gets rid ofthose cases where like you've always hadthat flaky test in CI but it works finelocally so that's one of the things thatwe try to address I'm not going to saywe were 100% successful because younever are but it also handles otherthings like actually building thecontainer as we to about generatingdarker images but also actually pushingthat to a container registry deployingit to Cloud run and it automaticallyhandles like the uh promotion fromdevelopment to production environmentsfor example um we also generate what wecall batteries included clients for eachone of our supported client languages uhso a consumer is generally working withgenerated clients and not like the kindof raw generated grpc clients if you'veever used those but we also and we sayit's batteries included because weinclude such things as service Discoveryso like if I'm working in a developmentenvironment on service a and I need tocall service B it automatically knowshow to contact the development versionof service B without me having to tellit um it also provides instrumentationso automatically get all the good youknow timings and logging and setionhandling and that kind of thing out ofthe box so as a consumer I don't need touh put that in there it also handlesenvironment aware authentication so onceagain if I'm in development it knowsthat I should use my developmentcredentials and if I'm in production touse those production credentials and ifI'm on my development uh VM which iskind of the way that Etsy does a lot ofour development work it knows then touse that set of credentials we use cloudrun native features for authenticationand authorization so that was anothercase we're like using Cloud run we justdidn't have to worry about thatimplementation or that uh decision andit was already it was just an easybutton for our apps SE team to just lookat it's like oh you're using IM we'regood um all services that are running onthe service platform are automaticallyregistered in our service catalog whatthat does is obviously gives us acatalog hence to name but it also doessome interesting things like we get someBas level document mentation like youget links to the Run books for theservice who owns this what's the on callschedule what are the links to thedashboards but we also do things like weautogenerate like a nice version of APIdocumentation from the protuff files andso you can kind of think of the servicecatalog page for a service is kind of aat least an initial hub for a service sothat I as a consumer can go look at thator if I just need to know moreinformation I can at least go there andit links out to other things uh we alsouse that same service catalog they we'reum uh integrating that with otherservices that are not necessarily in theservice platform so that that can kindof be the one place stop place becauseas you all know if you don't have atleast six documentation repositorieswhat are you evendoing all the ETC systems like over hereum they use these generated clients tocall out to services so all those greatthings I said about the batteriesincluded there U that's what they do forexample if I'm working in PHP and theEtsy web monolith which is what we callthe like main Etsy uh product like Ijust work with like highle PHP objectsand don't really have to worry about theuh implementation details I might evenknow there's a such thing as a serviceplatform and I definitely don't evenhave to worry about knowing that there'sa thing called Cloudrun just so that you don't think thatwe're going to get up here and say allpositive things about Cloud run andGoogle Cloud I wanted to at least giveyou a couple of uh uh challenges that wehad that we had to work through and someof these are just obvious in hindsightas things like this always are but wewanted to uh highlight them shortlyafter we launched this adservice um we overloaded a VPC connectorfor those who don't know uh withinservis to contact with other parts of uhthe Google infrastructure particularlythose things like a kubernetes clusteror services that run there you gothrough this thing called a VP Cconnector which sing is going tocompletely hate my description of thisI'm sure but basically it's like a proxyserver that's a really bad descriptionof it uh but it runs on VMS andeverything uh and we just completelydestroyed ours uh uh because we had donean a huge amount of loadtesting and everything looked fine butit turned out when we actually turned onthis feature in the Etsy website thatuser interaction like actual users likepeople sitting at their computers andbuying and selling things was completelyunlike what we had modeled before asusers always are so we wind up goingdown different paths that hit muchheavier endpoints and so we had toquickly you know kind of on the Fly goand make some dedicated VPC connectorsjust for theseServices services that we launched afteruh our Pilot service just because wekind of knew the Pilot service you knowinside and out by that point uh theywere a little trickier for us todetermine what was the best mix of likeCPU and memory all a versus user trafficversus concurrency particularly with allthe languages that we had involved uhand since in Cloud run you're running inum kind of a container and it's youcan't really get a shell you can'treally use like the traditional likeoperating system tools that uh we'reused to using like on a virtual machineso that's where we like heavilyinstrumented all of ourapplications and we work with thedevelopment teams to do this becausethey were the experts at theirapplications and everything and then wetook things that made sense we actuallypoured those back into the platform sothat everyone would uh have U access tothose it's like everything in a serviceplatform as I said we use uh uh GoogleIm so everything is TLS and uses layer 7authentication we don't rely on a lot oflike private networks or anything therebut not everything at Etsy does that alot of uh older systems at Etsy whichare the money makersuh we're lifted and shifted from thedata center as Corey said um so we'veactually been working with Google servisnetworking team to determine what's thebest way to get a performant but securelike connectivity from service toService as well as service toinfrastructure without exposing a lot oflike low-level details to developers inour ideal use case and this is stillongoing we want them to just State Ineed this kind of connectivity and thiskind of security and we figured that outin the serviceplatformum um another uh instance that we hadwhich um like all the Google servicesreally helped us get started veryquickly uh like particularly theobservability tools because they're justkind of baked in with Cloud run and theyjust work out of the box you justautomatically get uh a ton of metricslogs and traces however whenever when ofour Engineers gets paged at like 2: a.m.as you inevitably do or whatever they'reused to working with like grafana and ifthey're doing ad hoc things like we'reusing promql for things so we actuallydid uh a little bit of kind of glue workwith uh Google manag Prometheus andalert manager so that we could actuallyexpose all those metrics both the kindof like Cloud run native ones that comeout of the box as well as all the custommetrics that we're doing that that wecould expose those into familiar uminterfaces to to our servicedevelopers um another thing uh is umwhenever we first started using Cloudrun sidecar support was I think it wasmaybe alpha or even like a privatepreview only and so we were notcomfortable necessarily using that uhand we use open Telemetry for all of ourTelemetry um logging observability andeverything and in general the way thatyou do that is run a little agent besideyour code but if you can't run a sidecar you wind up accidentally inventingin a nit system which is what we did andanother thing that we do is we also runa proxy which is named the entry pointbecause remember what I said about me innaming things uh but what it does isgives us a common place forfunctionality regardless of the languagethat we're using so one thing that we'reable to do in the entry point forexample is we actually can dotranscoding from like uh Json togrpc uh so that we can expose things tolike more you know web based endpointsuh that's also another thing that weneeded to launch so we actually wound upmaking this kind ofmonstrosity that uh made sure that allthese uh processes were launched andinjected these additional binaries intothe server um containers as we wereworking since that time thankfully uhCloud run side car support is muchbetter and uh we've been um working withthatokay whenever we uh first began workingwith the um service platform we focusedmore on the day two which is kind of thecare and feeding of uh existingServices uh because we already had avery engaged development team in our adsteam and we already had a Pilot servicepicked out so we you know really didn'tneed to spin up that many services butsince then we've actually done a wholelot of work to work on that dayone um thing like I have an idea and Iwant to tested with ET and so we built aSandbox environment in kind of like a apair down version of the platform if youwill so I can go from absolutely nothingtype ESP a net which is how you create anew service and have a sharable linkthat something deployed in gcp in about5 minutes or so so not too bad thatincludes cicd and observability as wellum most things have just generallyworked for example after we launched theads pilot and we got over our VPC issuesuh they more than quadrupled the amountof traffic going to this service byusing it in more places around NY whichwas great we didn't even really noticelike Cloud run auto scaling just workeduh not going to say it's always going todo that but in this particular use caseit worked really well for usum we have um some requests for thingsthat do not nicely fit into the uh serusmodel and so we're actually working withGoogle and our internal gke teams toactually extend the service platform towork on uh more traditional gkeplatforms as well cuz we want to providethe same consistent like developerexperience regardless of the runtime andspeaking of that star's going to talk tous a little bit about how you can usegke and Cloud runtogether thanks Brian that's right I'mgoing to tell you how Etsy and all ofyou can use both Cloud run and gketogether so first let's recap you heardit from Drew what'sclaudin allows you to deploy and scalecontainerized apps in a fully managedenvironment so it's simple it'sautomated and there's no clustermanagement to worry about Google doesthat for you and yes Brian we heard youVPC connectivity could be better sothat's why we've launched a few weeksago direct VPC no more sever as VPCconnectors in the middle your cloudservices can just directly send trafficto your VPC Networksimple and we've also launched recentlysidecars support for cloud run sonotably with sidecars that can help youbring an observability sidecar like openTelemetry or PR Google managePrometheus check out those two newfeatures of cloudon I'm a big fan ofthem so nowCloud run and GK many customers havemoved workloads between Cloud run and GKfrom and to and actually we've designedcloudron to avoid lock in and to enableportability we've designed it that wayfrom the beginning so obviously theportability is enabled by cloudon andgke supporting the same softwaredeployment artifact the oci containerimage the same image can run on gke oncloud run on your local machine anywherecontainers are running there is nothingproprietary about Cloud run in acontainer that you deploy to Cloudrun but we didn't stop here claron goesfurther than that claron is not usingkubernetes under the hood but its V1 APIis designed to enable portabilitywithkubernetes and so the cloud on APIactually share the same structures andattribute as kubernetes so in thissimple example you can see thesimilarities between a kubernetesdeployment and a cloud run Service asyou see most Fields look exactly thesame and the diff is just a fewlines so now I'm going to tell you abouthow you can use both together in threeways how you can manage them togetherhow you can secure them together and howyou can bring them together in the samedatapath so on the consistent managementside first uh there is a product that iscalled Cloud deploy Cloud deploy willallow you to do continuous deployment toboth Cloud run and gke managingenvironments and parallel deploymentsCanary deployments CL Cloud deploy doesallthat next if that's your thing you canmanage Cloud run services using Cubecontrol to do that you would need toleverage something called called configconnector but you can use Cube controlto manage Cloud run if that's what youwantto then when it comes to buil-inobservability those who run times havebuil-in support for logs into Cloudlogging you can brow browse your logsfrom cloudon NG GK in the same place youcan observe the metrics from cloudon orgke in the same Cloud monitoringdashboards and you can even Defineservice level objectives slos on yourCloud run services or your gke servicesand see them in a centralized locationwith SLOmonitoring and finally you can as wementioned enforce policies or collectTelemetry using the exact same side carson cloud run and on GKso that's about management what aboutsecurity yes sorry so both claron and GKhave the notion of workloadidentity a workload identity isbasically an identity you give to yourservices and that determines what it isable to do and you can use that for theleast privileged securitydesignyoucan check containersfor vulnerabilities both cloudon and gkawill scan your containers and surfacethose vulnerabilities in context ofthoseproducts you can enforce a centralbinary authorization policy to decide ifcontainer images should or shouldn't bedeployed to either Cloud r or gkedepending on things like have they beenscanned who has tested thatimage and finally you can put all thatwithin the same VPC service controlparameter when it comes tonetworking with a global or a regionalapplication load balancer you can servesome endpoints on cloud run and someendpoints on gke from your usersperspective they are they're coding thesame domain it's the same thing exceptthat some requests will go to Cloud runsome will go to gke and actually that'show you can move between Cloud run andgke invisibly from your end users youcan from one day start shifting trafficfrom GK to Cloud run from cloud run toGK even gradually thanks to applicationloadbalancers as I mentioned you candirectly connect cloudon services inyour clustersVPC and uh you can even give private IPSto cloud services by using an internalloadbalancer so that's how you can useclaudon and GK together but now aquestion that you might have is for agiven workload for a given service whatruntime should Ipick and you know what we like to say isif a workload is a fit for cloud runwhich means that it is an autoscaleservice or a batch job we like torecommend starting with Cloud run and ifit's not a fit pickgke as a mentioned you can always goback and forth easily later if you needto so we like to think that claing isthe best way to get going withcontainers and that we've enabled usingclaudon and gke together that wraps upour talk thank you verymuch we will be taking some livequestions if you want to uh at the micright here or you can catch up at theend uh we are will'll be around andpleas these[Applause][Music]are"
}