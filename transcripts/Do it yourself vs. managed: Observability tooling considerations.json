{
    "title": "Do it yourself vs. managed: Observability tooling considerations",
    "presentation_type": "Breakout",
    "categories": [
        "DevOps, IT Ops, Platform Engineers, SREs",
        "OPS205"
    ],
    "video_id": "en9tsERdhZA",
    "time": "Aug 29 04:45 PM - 05:30 PM CDT",
    "transcript": "foreign[Music]good afternoon everyone all rightum so welcome this is you do it yourselfversus manage it's a little short on theslide but we had to fit it on there sojust to introduce ourselves reallyquickly I am Kyle Benson I am Benji SotoI'm a product manager in Google Cloud Ido data visualizations and AI yep I alsoworked with the the cloud up you knowwithin the cloud operations Suiteumthrough what we're going to be coveringtodayum I'll just call out so originally wedepending on when you may have signed upfor this session we're going to havesomeone from Wayfair join usunfortunately Zubin had to cancel I justwasn't able to make it but uh so we'llquickly talk about sort of what theyachieved and if you're interestedthey're also you know Wayfarer is in acouple of other locations throughout theuh the sessions this week so we're happyto answer any questions about them oryou know maybe put you in touch withthem just based off of what yourinterests areso other than that we're going to betalking you know a little bit about someof the aspects people evaluate whenthey're looking at you know DIY versusmanage the offerings specifically in thereservability space I mean we so we workwithin Cloud operation suite and so at ahigh level we spend a lot of timetalking to customers about thatum but we want to make sure you know wethis is our sort of area of expertiseand so when we talk about that a lot ofthe lessons learned that we've seen willbe focused on them so we'll cover acouple of things in sort of areas Ithink areI'd say area of importance maybe notnecessarily to everyone but like when wethink about sort of uh how peopleapproach stuff and today how a lot ofbusinesses think about this it may notalways line up with what I would suggestso just as quickly talk about Wayfarerso as I mentioned Wayfarer is one of ourcustomers of the Year this year that wasa result of the work that they did withus and we had um you know a pretty greatexperience working with them they'vebeen great partners for us but one ofthe big things for them is they camefrom a um an open source offering whereultimately they decided it was a littlebit easier toto migrate to the cloud operations suiteand that originally started with Cloudlogging and they used both our loggingand metrics sort of used to to handlethis stuff but ultimately a reallypositive experience for them they had 25Opex savings on what they did movingaway from a manage sorry an open sourcepipeline so a really great story areally great experience for them andwe're really happy that they were abletospeak more broadly about it althoughlike I said Zubin couldn't be here todayand so I did want to sort of highlightin his own words what that really meantand for them this really started with ayou know an elastic open source basedpipeline where they migrated really witha heavy focus on you know their log basevolume uh that turned into using thatfor log base metrics and using ourvisualization tools and then also is nowin the process of evaluating our managedservice for Prometheus to sort of drivethat homesowhen we talk about what matters I thinkyou know at the end of the day whatyou're really taught talking about whenyou talk about DIY versus managedservice is that's the wrong buttonthere it is is build versus buyer rightthese have existed for a long time Ithink as long as long as there's beensoftware and even before software theidea of build versus buys has alwaysbeen you know sort of the first placeengineering team start when they'rethinking about what they're working onand soreally at the end of the day here islike you know if you the thing I'll saythat's most important if you don't thinkabout this day in and day out or if youdon'ttalk about it with your teams the themost important thing I'll say is justthinking about what's your mission andwhy it matters and there's realimplications for that right prior tocoming to Google I was at red hat fornine years and I was there at a pointwhereum you know I think Red Hat fairly wellknown but if not open source basedsoftware company you know primarily ororiginally focused on Linux offeringsand now very heavily focused in thecontainer space butwhen when I was there we were growing alot and uh we used an open source mailserver and we used does anyone anyoneever use etherpadanyone familiar with that no okay etherokay one one can so ether pad was sortof an open source online uhcollaboration tool for document writinguh so ultimately as we started to grow Iwas when I joined there was like 4 000people at that company we ultimatelyoutgrewuh just some of the open source toolingthere was too much for us to maintainand scale and for red hat that was sortof an internal dilemma right red hatreally truly believed in open source andI think one of the reasons I came toGoogle is I think we also believe inthat commitment to open source but itwasn't critical to our day-to-daybusiness and so ultimately we had tomake the decision uh to to move off ofether pad and a really simple mailserverum they actually ended up adoptingGoogle workspace right which is a happystory because I can use them as a youknow sort of a quote here right but uhit worked out really well for them itworked out really well for us and itreally it reduced the amount of frictionwe had while collaboratingyeah so what I'd like to do real quickis run through an e-commerce example sowhat's important for an e-commerce shopany anyoneyou want to sell products you want toadd to cart you want to check outthat is how you run the business to getthere you might invest in that productcatalog you might invest intorelationships with suppliers on Shore oroffshore negotiating with thosesuppliers buying those products when youbuy those products how do you get thoseproducts from International markets orsupplier zones to last mile deliverywith that customer and to do all of thatyou might be using email you might becollaborating with different employeesand you might be investing into a searchalgorithm to make these productsdiscoverable on your storefrontwell with the world of Google Cloud muchof that is already available for you youcan buy email from the cloud you can buycollaboration tools so your employeescan collaborate you can leverage searchalgorithms from the Google Cloud usingyour data setsand what that allows you to do is reallyfocus on what really matters which areyour competitive differentiatorsthat way you're not focusing on allthese othernon-differentiators so if you thinkabout building these products to builddirection does feel the most creativebecause you get to express yourself andwho doesn't love building Tech productsright we all do right but in many casesyou should really think twice and reallyconsider should you actually buy itinsteadKyle's going to talk a little bit moreabout how there are many costs that comewith build versus Buyyeah I think like I mean the the thesort of big one that glares at me a lotof the time when I when we talk tocustomers when we meet them you know ona day-to-day weekly basis whatever it isis always this one an opportunity costand I think like show of hands who'sfamiliar with the word opportunity costsor the phrase opportunity cost Okay coolso actually I'll say like uh when I justdid in preparing for this talkum you know there's a Pew researcharticle that said something like youknow half of people surveyed new atopportunity costs men but opportunitycost is at a high level the decision todo something based off ofum you know sort of like what are youmissing as a result of not doingsomething else right so if you don'tstudy for a test and you go to a movieinstead you know what's the opportunitycost what is that ultimately the impactof that on youum and so when we talk about opportunitycost in you know sort of Enterprisespaces you know there are lots of teamsthat handle this really well if you workin a large organization maybe yourprocurement team handles this for you uhif they do you know maybe they're modelare really great you know if if notmaybe something that you need to starttaking on within your own engineeringorg is really more focused on how do youassess that and I'll say like you knowat a high level if you're using ifyou're in a large organization yourprocurement team might have a strongunderstanding of some different modelsthere like one of the more popular onesis a Monte Carlo model and that helpsyou sort of assess all the differentfactors and sort of all the differentrisks as a part of what you're doing ifyou're a smaller organization I justrecommend this book how to measureanything we use this a lot within ourdoor research right so if you've everheard of Dora or any of the stuff wetalk about there in terms of like how dowe achieve velocity how do people orteams that perform accidentally actuallyyou know operate this is a bookrecommended by one of the originalresearchers from that team so I reallyencourage you like if you're notfamiliar with it if it's sort of new toyou in terms of how you represent yourproduct team and what you'rerepresenting in your org having somebaseline of how to measure andunderstanding what your opportunity costI think is going to be really importantin most of these conversationsthe second one you start to think aboutespecially within the observabilityspace is outage cost and this is sort ofa fun thing to maybe poke at but likeyou know if I think you know Gartner afew years ago estimated that you knowper minute it was 5600 USD for an outageand the thing that we always sort ofcome back to is you know if if you havean outage or your observability platformhas an outage like what you know whichone is it right how do you know thatyour business is not failing if youcan't uh actually visualize what's goingon so we see this a lot and in fact youknow I see this a lot specifically onthe metric side when we talk about or wetalk with customers usingumuh you know like sort of Open SourcePrometheus where they just have theydon't have the ability to visualizeeither on a regular basis they don'thave the uh the retention periods thatthey need for the metrics it's one of acouple of things like that but we reallysee this pretty commonlyso an average cost really matters I willsay you know that doesn't mean you can'tever have outages there's always goingto be some and there's you know there'sa level of acceptability there if you'renot familiar with outage and sort oflike how to calculate your outagescorrectly I'd really recommend checkingout the SRE book which has a great guideto implementing slosand sort of deciding what's important toyou right like 100 availability isalmost never the answer uh you know Ithink when you really think about itmost people are at you know four ninesuh 999.99I've seen a couple of people ask for a99 you know99.995 and that's really pushing itright like that's what is that I thinkuh uh if I'm not I'm not going to do themath right but I think it's like eightminutes a month something like that soyou know like there there's there'salways going to be outages 100 is neverreally going to be the answer butthere's things you can do to sort ofimprove that and sort of figure out howyou measure that soI'm going to go into a little bit moreon the SRE stuff only because if yousorry SRE if you've never heard thatterm a set reliability engineering I'lluse SRE going forward but SRE is amethodology used at Google it's usedelsewhere too so um you know if you'venever heard of that there's lots ofstuff here you can consume to sort ofget more familiar with it but one of thebig factors in SRE is focusing onreducing toiland so when we talk about toilum you know I I my first job my firstsort of real job was I was a Linuxadministrator right so you know maybethat's someone's role here but for methis this Always Rings home very true Ialso worked a lot in automationespecially when I was in red hat so whenI think about toil I really have likevery strong visual feelings on this wayI can almost taste the amount of stressyou know but so when we think about thisyou know there's a couple of things likeyou know what is toil well it's you knownon-tactical so it's almost always areactive posture to somethingit islacking enduring value and so thelacking enduring value is that if you dothis and there's a high likelihoodyou're going to do it again right andthere's no opportunity for you to solveor improve upon that basis that would belacking enduring value and then grows atleast as fast as its source right andthe idea there is like if you as abusiness have a lot of Toil and you arecontinuously growing your toil is goingto grow right it's going to grow withcommensurately with your business andwhen you start to think abouthow teams work how teams manage or howteams are managed like that's a reallyimportant factor to sort of think aboutlike this is our practical experienceworking at Google that's where this bookcame from but it's not only withinGoogle right I think most people sort ofunderstand this at a high leveluh productivity right so there's thereason I bring this up is like at itsmost basic you want your team to behappy you want the people inside yourorganization to be happy but there'slike if you're going to put this to aspreadsheet there is a human cost to itright and so I would encourage you tocheck out the eliminating toils sectionof the book but what does it cause rightit causes confusion and it causesattrition right so if you have peoplewho are constantly cycling in and out ofyour organization that's definitelygoing to lead to confusion andultimately will lead to a less valuableproduct for you or your end users and Idon't think that can be understateddoes anyone anyone remember Dexter's Laball right cool all right I got a couplepeople this is this is my idea of toilthis is the best best example that Icould find uh in the original show whenI was like as a kid he's super happy tobe doing this and then very quickly itturns into just the monotonous day inday out thing and that's what it feelslike when you're totaling away atsomething right I always like that wordbecause it's sort of uh it just soundspainful I don't know so when you thinkabout this there's a couple of things tofactor in and this is something we see alot of a lot of the time especially whenwe start talking about open sourcesoftware isumyou know the idea of human cost and theidea there is like well if I'm going tostand on my own you know again I'll leanback on Prometheus if I stand up my ownPrometheus stack like how much time am Igoing to have my team focused on thisum I would say it's almost it's almostalways uh an underestimation for peoplewhen we meet them right but that's whythey're meeting with us so there's athere's a little bit of bias there butultimately this is something that reallyaffects most teams and as you start togrow especially in a tool likePrometheus or other spaces not only doesthe capacity come up higher on your youractual Computer Resources but it alsoincreases your in terms of your yourindividual status uh or your humanstatus as you're sayingforeignI like this slide I like this sort ofdefinition because uh we used to alwayssay this and I'll come to the quote in asecondum but when we talk about open sourcesoftware there is athat idea that open source software isfree open source software is free rightI mean that's the sort of statementum and there's obviously always a costbehind that and I think a lot of peopleget into that with us but this I likethis slide because the word Gratis isyou know I think it's I guess I shouldsay it's Latin I shouldn't say that withcertaintybut Gratis focuses on the idea that itcomes without a cost and Libre is likeFreedom right Liberty and so both ofthose things mean free especially in theEnglish language like it's a very youknow it's not a clear distinction whenwe say open source software is without acost I would say that's not true it'sthis one right we're talking aboutLiberty you have the liberty and thefreedom to do what you want with themum and that's like maybe like anesoteric pitch on it but I'll say likegenerally We Believe open sourcesoftware is important if you look atthis is the this is like a really reallyterrible chart for you to look at butI'm going to make you do three moreafter this uh if you look at our youknow our contribute contributions tocncf this was uh last I did this at thebeginning of the month but this is usthis is Googleand that's everyone else contributing tothe cncfthis is a six-month spanthere we arethis is a two-year space I changed the Ichanged the dots or I don't know whyKyle what's cncf oh I'm sorry yeah cncfis the oh goshI got into Computing Foundation I gottied up there for a second uh yeah cncfthank you and so the cncf is where wecontribute a lot of projects tokubernetes inside of that Prometheusinside of itum but yeah so there's our contributionslike I don't like the downplay howimportant open source software isbecause we're heavily committed to it weconsistently contribute a lot and likeGoogle has the resources to do that likewe're very fortunate if that's the casebut that doesn't mean that it's easy todo and we obviously pay a lot of peopleto focus on that so when you start tothink about open source software and youstart really thinking about thecontributions and why that matters Idon't mean to imply that it's notimportant that you shouldn't use likewe're really all in an open source andlike I said for me personally that waslike a big reason why I came to Googleafter I left red hatI'm going to walk you through like areally quick idea of what why thismatters is like when we started lookingat if you're familiar with Prometheus ifyou're not I'll briefly explain thatPrometheus is sort of the de factostandard for kubernetes monitoring uhspecifically around time series metricsnow there could be some debate aboutthat you can maybe use another toolthat's okay but when we talk about thisI'm going to highlight that you knowthis actually came out of Google rightit originally was a project called Borgmomand Borgman grew and Grand grew weultimately sort of evolved this into atool inside of Google called monarch nowBoardman actually was essentially forkedby a couple of Engineers that went toSoundCloud and you know SoundCloud isreally where Prometheus as it standstoday was invented but it was basedroughly off of board mod and how wemonitored uh workloads inside of GoogleI think it was 2012 that they foundedthat that project originally atSoundCloud so so it's been around I meanit was around for a long time inside ofGoogle It ultimately evolved because wehit some of the own capacity you knowsome of our own constraints around thatsort of model and you know as we startedlooking at this we built out our managedservice for Prometheus just because ithas taken such a strong foothold insidethe space but there's a lot ofchallenges to it and so it's not to saythat we don't believe fundamentally inopen source it's that when you reallymake the cost considerations and youhave to think about this like there'smore factors than just like I'm gonnapull software off the shelf and I thinkeveryone sort of implicitly understandsthat but if you don't or if your teamsdon't it can be it can weigh on teams alotthis is the quote I think this is likesort of Back To The Grotto speed Libreit's you know it's free speech not freebeer right and that's maybe like aneasier sort of like less less a verboseway of saying this I think this is areally nice summary of like there'salways a cost to something when youdeploy in an Enterprise when you deployit in a startup it's always going tomatter and so you have to be tacticalabout that you have to really beconsiderate about how you're spendingyour time in resources I'll come back tothe reason so back to sort of hiddencosts here I don't think this is ahidden cost but I like to sort of driveit home for people I think the idea hereis when you think about resource coststhis is the one that people think aboutmost so if we people don't think aboutthe human cost people don't think aboutthe opportunity cost I think peoplegenerally think about this and this issort of their Baseline and it's likewell if I run it you know if I run it ona server underneath my desk where likeit doesn't cost me anything I alreadyhave that server and that's a great wayto start it's a terrible way to scalesouh now that I've gone through all thedifferent ways that we burn money uh I'mgonna hand it off to Benji to talk alittle bit through how we approach oursoftware and what we're trying to do forGoogle Cloud customers thanks yeah soI think you can think about GoogleCloud's approach in one key statementit's really the path of least resistanceorout of the boxso whether you're a developer buildingapplications on gcp a business analystextracting intelligence to ins to makeinformed decisions or a security analystwho's really managing cyber securityrisk or the platform admin who'smanaging that platform for a largeEnterprise because you're working on onemaybe multiple clouds Google Cloudoperation has really built the toolingyou need to get your job done so we'vemade it compatible with open source justlike Kyle just mentioned whether it'swith Prometheus open Telemetry or evenfluent bent you can bring those assetsthose metrics dashboards or alert rulesinto Cloud operations every gcp servicehas really created or not every amajority of gcp services have reallyprovided a day Zero experience forobservability so the moment that youmake that deployment the moment that youleverage that service you can startanalyzing the system Performance Healththe trends and start troubleshootingissues immediatelyso all that data that's being generatedthe metrics the logs that we provide foryou out of the boxis really stored in our planet scaledata platforms these data platforms asKyle was mentioning for time series wecall it Monarch but we also support withbigquery and through that accessibilityyou now have a suite of diagnostic toolsthat are that are available to you foryou to explore that data you can exploreyour metrics your logs you can builddashboards you can set up alerts so thatyou can work with proactive workflows inthe futureultimately this is the power of GoogleCloud operationsso let's go back to that e-commerce shopexample that we talked a little bitabout earlierlet's ask one more time what isimportant for an e-commerce shopyou want to minimize abandonment or LiamNeeson's giving you a callno I'm just kidding it'll be a sales repumlet's take a look at a self-managedsetup within the popular open sourceecosystemso here you can see a typicalself-managed open source Prometheussetup you have the push Gateway withshort-lived jobs you have thepre-configured alert rules with thealert manager you have your metricsbeing defined with open metrics and thePrometheus server that's handling allthat and then you have this querylanguage called prom ql it's uh it's ait's just another query language thatyou have to learn alongside all theseother query languages and grafana isgenerally the dashboarding tool that'spreferred on top of Prometheus for datavisualization and for data exportthis this is kind of tough because it'sreally difficult to scale horizontallyin another prize if you're a startup itmight work for you but the moment youhave multiple engineering teamsdevelopment teams that are trying tospin up their own instance of this goodluck trying to manage all that andstandardize it which brings us to thenext uh challenge it's really difficultto do Global aggregations right with allthese different instances because nowyou have to manage all that ETL allthose different uh ingestion workflowsthat are being set up and then thethird challenge is really aroundhistorical data right how do you managehistorical data how do you do thoseyear-over-year analysis where are youstoring all that information right youthink about Google Cloud again we arethe data platform for a reasonand lastly I think over all this workthat you're putting into it is really anoperational burden it's taking attentionresources capacities away from yourcustomers into managing your own setupwhen in reality you could really haveallocated that to actual features thatdeliver value or differentiate yourbusinessso there is a pathit's the path of least resistancewith Google Cloud operations you canreally have Google manage all of thatfor you so Google as I mentioned beforeit's open source compatible so you canbring all those assets into the cloudwhile unlocking competitive pricing youhave all that you have Globalaggregation capabilities and mostimportantly you also start to unlock adifferent value prop it's Google as apartnerGoogle's roadmap is focused on AI so asGoogle Cloud operations roadmap with AIstarts to evolve AI operations you'llstart to benefit from that that's as Imentioned as Kyle kind of mentionedearlier that's compatibility withPrometheus and open source but youunlock those data platforms you unlockvertex AI ml the model Garden all thosecapabilities with your data set that'llallow you to build customized workflowor even start considering automatedworkflows soultimatelyGoogle is really committed to buildingproducts that you're going to love sogaining that partnership is I say it's apretty great value problembut there's one moreGoogle can scale that's 65 quadrillionmetric points on diskthere's two trillion active time seriesinside of Googlesupporting Google search and all of ourother products but with Google Cloud aswell now I get it these are really bignumbers and sometimes it's hard toreally fathom what do these numbersactually mean Kyle can you provide anexample of let's bring this down toearth yeah I think uh if we take it'sprobably the easiest thing to take alook at is the slide and this isactually from grafon and so grafana is apartner of ours this is this is fromthem running this in an open sourcecapacity but this is a 2022 performanceblog post from them focused onperformance for Prometheus stack and soif you sort of think about this is toget to a billion active time seriesright it's a billion active time seriesand memory which is their uh theiraggregation tool if you have multipleFederated promethia and PrometheusPromethean I actually don't know if thePrometheus is isso uh so but yeah like so the scale hereand then you start to look at this andlike this is this is this is maybeachievable for one organization when youneed to have multiple when you need tohave if you're especially if you're in alarge organization it just doesn'tthere's a sort of a like a diseconomiesof scale here right that's something oneof our co-workers Lee loves to say allthe time but this is achievable for oneit's really not achievable for multipleand as you start to grow beyond thatlike this is just raw compute costs asopposed to any of the additionalmanagement stuff it takes a massiveamount of compute to get to one billiontime service for your organizationthat's again it is achievable and ifyou're a really intense engineeringorganization like it's doable it's justlike if you want to spend the cost inthere it's ultimately going to be up toyou and how you decide that inside ofyour teamI think the important takeaway here isthat you have 1500 replicas of thatinstance just to reach one billionactive Time seriesor day Zero you can get it out of thebox by Google and be able to scale upand know that you have up to three twotrillion in scale right it's ano-brainersolet's actually jump into this operationsuite and show you what this day Zeroexperience might look like if you'veseen the opening keynote you may haveseen a presentation with the alertreaction workflow the alert workflowwhere you're responding to an alertyou're looking at the metrics maybeyou're navigating with prompt ql there'sa there's a couple AI features to donatural language exploration and thenyou're kind of explaining a log that issomething I would probably call more ofa proactive workflow because you'vealreadyTelemetry you've set up the alert youknow what you're monitoring what we'regoing to show you today is a bit more ofthe reactive workflow what happens whenyou you didn't set up that alert rightyou actually don't know where theproblem is and there's a needle in thehaystack so let's jump into that demojump to the next onemorethere we are okayso I might click and pause through thisuh but but we'll we'll start here so sothis is there's actually a 10 seconddelay just when I was recording it butwhen we go through this so this is thisis a gke cluster out of the box weactually deploy one of our jumpstartSolutions which is uh something else wecan talk about if you're interested butthis deployment automatically handles uhis there is it goingthis is going okay that was just metaking a while so this is going throughthis is automatically going to show youwhat's available so this is ourobservability and context view as soonas you deploy a cluster this isavailable to you there's no cost forthis all the metrics that we ingest inthis view are automatically provided toyou uh and then you know on the loggingside which we'll talk about a littlelater on we only there's only a chargefor logs that you keep so all metrics onthis view are free here we're jumpinginto sort of a new view for us which isan attempt at making this datameaningful to people who may not have asmuch operational experience so if weclick throughcould you pause right there Benjiperfect thanks so if you click throughwhich I just did this is our new view ontroubleshooting playbooks now in thisparticular case I had a pod that wasfailing it was just you know a pythonscript that would just exit and then youknow kubernetes would restart it that'swhat kubernetes is supposed to do but inthis particular situation we identifiedand were able to tell that there was acrash looping pod and automatically gavesome proactive troubleshooting tips foryou here so as you scroll down you cango ahead and hit playuh as we scroll down we can see a littlebit more of what's going on we saw a bigspike in the crashing here and then aswe go down there's logs I just wrotelike an exiting now just to sort of showyou like we're pulling this all in fromthe pot we're pulling the metrics in aswell as the logs in the Pod and thenwe're going to provide a little bit moreinformation from the kubernetes clusteritself now there's nothing here that'sgoing on that's really crazy you can seea little bit of log messages we'll alsoprovide an alert so that if you'reseeing this again and you want toproactively avoid in the future you canjump into that alert now that alert willdirect you right back to this Playbookso if in the future you have an issueit's fairly easy to sort of get back tothis automatic troubleshooting withoutany context or knowledge that's requiredfrom you to set this up we've rolled outa few of these so far we just introducedthem last month but we have four or fivenow they're recently published as wellso let's go back to that cluster we havea microservice demo it's an it's a uhit's a demo of an e-commerce shop rightback to the screenshot we saw beforeif we take a look at I'm going to clickthrough to this front-end deploymentand we're going to jump into theContainer logs for this deploymentso heremaybe I just want to get a little bit ofoperational data this I want to figureout without you know having toinstrument my application what Telemetryis available I just need to figure outwhat's going on here I'm going to run ascript I've slightly modified or thatsort of cue can you pause it real quickthanks Ben so one of the things you'llnotice is when I click through we keepall the context automatically so as soonas you click through in a container logswe know where you're coming from so weknow that you're specifically focused onthis cluster in this region in thisspecific container now there's a coupleof different jump points you can sort ofmaintain this so if you have this thisapplication running across multipleclusters or if it's distributed globallyyou can maintain that context for aglobal view or for an individual view Ijust happen to choose this specificcluster in this instance of thatfront-end applicationmodify itand uh the product and just a quicksearch in the payload to say servingproduct pagenow I've already created this but what Icould do from here with this payload iscreate and create a metric and you cansort of see that right here I'll showyou what that looks like in a second ifI've already created itso I go thereno thanks we click on view metricsExplorer I'm going to let Benji talk alittle bit about the metrics Explorerbecause that's the area he really workson yeah so as I mentioned to you earlierall these diagnostic tools are availableavailable to you out of the box as longas that data is being generated withinGoogle Cloud whether you're sending thatdata or whether we're providing it foryou so after creating a log base metricso you're able to monitor that erroryou're able to explore that datadirectly within the metrics Explorer goahead and hit enter the metrics Explorerallows you to explore that data you canreally just see the insights prettyquickly nowthat's just with exploration what Googlealso offers you the ability to querythat without with your own querylanguages so as we mentioned there is aprompt ql compatibility in case you doprefer writing your own prompt qlqueries because you just have thoseAdvanced use caseskeep playing yep so if we move over tothe dashboards list which you'll findpause what you'll find is a list of allyour dashboards but these are not justdashboards that you generated they'realso the dashboards that we provide foryou out of the box just for using ourservices these are the best practicemetrics golden signals CPU memory thingsyou should be looking at if you'remonitoring one of your applicationslet's go ahead and click one of the gkeout of the box dashboards pause oh yepso this is the GK up key plane this is agke out of the box dashboard I'm goingto want to customize it so I'm going tocopy on the top right hand cornerand we'll get to that dashboard in justa second for the sake of this demo andwith just a single click you're able tocustomize a version of one of ourdashboards within one of your owncustomized uh views to view those keykpis and see how that uh that kubernetesis performingnow this new experience is the dashboardBuilder which was recently redesigned afew times in about about a month ago wewent General availability with this newexperience if you hit add widget you canactually see pause here you can actuallysee that the dashboard Builder isexpanding across multiple data sourcesso you can really bring your metricsyour logs your alerts your incidents inthe future will be bigquery andeventually SQL analytics to be able tobring create a single pane of glass withyour dashboards whether you're mywhether you're monitoring the userexperience or the application tierinfrastructure platform or networkingand eventually business insights somoving forward and hit metricthe metric Explorer opens up we're goingto go ahead and select a metric afterselecting a metric you're going to getthe list of all your metrics that you weprovide for you or that you've broughtinto the platform or generated via logswe'll click the metric that Kyle justcreated after clicking that metricyou'll be able to view the data in thiscase we're looking at product pagerequests hit applythe data is then returned what applyand just like that we went from a bestpractice Google provided dashboard to acustomized dashboard with your ownanalytics and your own insights so youcould monitor your unique applicationwe're going to talk a little bit about aproduct that is just launching nowum recently went into genderavailability February in February whichis logs analytics which is something youmight see in the world with SQLanalytics being able to monitor youraudit logs or you know some folks reallylike to use SQL so let's move to thatyeah so when we think about sort of theviews and loggingum going back to originally the thing Ishowed youoh oops can you fix that for me yeahokay oh yeahthere we go so originally we went backand we looked at the log view sorry thethe demo the the the the the the workthrough on this is a little uh weirdwith the with the video but so anywaywhen we're looking at prior logsexperience the logs Explorer which welooked at first to create this metric isreally focused on could deposit isreally focused on sort of exploring andso when you're in an activetroubleshooting scenario or when you aredealing with ayou know sort of a a an immediateresponse something is going on you gotan alert whatever the logs explorerswant to go to dig into a specificincident as you saw earlier withPriyanka in the keynote we have errorreporting you have the ability to sortof bubble up those errors but weintroduced log analytics because one ofthe things we increasingly saw was justthat customers wanted more flexibilityaround exploring their data and I wouldsay like a more Biz Ops or security Opsfocused way and so log analytics is oursort of introduction to that now itdoesn't replace seam tools tools thatare really focused on like a securityspecific use case but it does allow ussome really nice flexibility with thisdata so I'll show this query to you in asecond but what you're looking at hereis the payload that we just had with thesame product values and I'm going to runthis through to actually generate aquick chart on what's going on so youcan see the initial results I have arejust a flat table of everything that'shappened and what we're sorting on isthe number of product requests that I'vehad over a period of time that I wasrunning on it as well as any uh you knowspecific codes I've might be reportingon now you notice like most of thesedown here are 200 we had a couple ofnulls up here and I'm not sure why it'ssomething with the application but wecould see the sort of overall popularityof products just sort of organized bythe number of requests that we've hadwithin the time frame on this go aheadand hit playif I wanted to I can actually jump intothe charting view here this is currentlyin preview it just went live a couple ofweeks ago and I'm just going to organizethis and clean it up to look a littlebit nicerso we'll change that we'll add abreakdown component so if I want to addaany codes that we may have gotten Idon't think I have 10 codes but you cansort of see really quickly and go aheadand pause this is sort of the view ofthe breakdown of what we're looking atwhere we now have you know how manyproducts what or sorry what the productswe requested at and sort of what theoverall status of that product requestwas so if we're getting a bunch of nullor calls like we need to figure outwhat's going on there but but overallour goal here is to try and provide atool that allows you to flexibly sliceand dice your log data in a way thatmight be more relevant to your businessas opposed to like an activetroubleshooting scenarioso we're going to wrap upconsider it again like the app theopportunity cost human cost outage costand resource costs these mattermore than others I would argue humancosts might matter than all of them butyou know it just sort of depends on youryou're leaning there and I think whenyou think about this finding the rightfit for how your organizationprioritizes work it's not going to beone size fits all you know Google has amethodology for this other people havetheir own methodologies and that's okaybut it's important to consider thefactorsum if you want to reach out to us I willsay we have um you know we'll be in thebooths the next couple of days you knowthat uh uh Booth Duty it gets downstairsin the devops innovators hiveI'll also recommend a couple of sessionsso we haveum some fairly Hands-On sessions comingup right so observability fortroubleshooting optimization with openTelemetry I mentioned we're reallyreally invested in the open source spaceand that really comes to light with openTelemetry if you're not familiar withthat I would strongly encourage you tocheck out open Telemetry and understandwhat's going on in that space it'sreally important for how we're going toimplement an instrument stuff but it'salso a really great standard in thatspace and we think people are going toyou know get a lot of value out of itum check out our you know do it AI Deepdive and then the 10 best practices anduh you know scaling with our partnerover at uh snap soso we love feedback I guess I should sayplease give us feedback and then thankyouum thank youforeign"
}