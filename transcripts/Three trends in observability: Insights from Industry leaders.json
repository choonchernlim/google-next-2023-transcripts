{
    "title": "Three trends in observability: Insights from Industry leaders",
    "presentation_type": "Breakout",
    "categories": [
        "DevOps, IT Ops, Platform Engineers, SREs",
        "OPS208"
    ],
    "video_id": "3-lSnPdHPQU",
    "time": "Aug 30 03:00 PM - 03:45 PM CDT",
    "transcript": "foreign[Music]to our session here three Trends inobservabilityinsights from industry leadersum thank you for taking the time to youknow be at the session uh you know Ithink you'll find it a fun andproductive discussion uh with our youknow distinguished panel that we haveumso we've got a few folks hereum you know from Google as well as uhyou know our key isv and softwarePartners in the spaceum Sameer Nori I lead up ourinfrastructure in devops partnermarketing function uh I have thedistinct pleasure of Hosting this panelwith Manisha Varma I'll let Manishaintroduce herself hi everyone I'mManisha I work at Google Cloud ondeveloping strategic Partnerships withour devops ecosystem uh specificallywith companies in cicd observability andconfig managementawesome and uh we'll obviously have ouruh you know distinguished panelintroduce themselves in uh in a secondhereum so just in terms ofum you know the key Focus for thesession uh we're really going to discussstate of observability trends that youknow our partners here see in the spaceum and we think they've really followthe three big categories right uh we'regoing to cover a range of topics todayone of them you know fits in the bucketof observability and how the space hasevolvedum there's different definitionsFrameworks components uh our panel willtalk about that we're going to talkabout generative AI I think we'd beremiss if we didn't cover that uh youknow based on everything you've heardyou know at the conference and thekeynote and the different sessions uhand we'll talk about containers andserverless right so those are going tobe our three main buckets of uh you knowtopics of discussion and uh and thediscussion we're gonna have hereum so with thatum you know I want to start byintroducing our panel uh so you know I'mgonna go starting with Ian you know ifyou can uh you know tell us a little bitabout yourself your role electronospherehow you work with customers and a littlebit about the partnership with Googlecool thanks hi everyone so I'm Ian uhI'm field CTO at chronosphere and for methat's a primarily customer facing rolepart of the go to market organizationpart of the dark side of your sales andmarketing and customer successum and for us chronosphere is focusedmainly on the part of the market that iseither adopted or is adopting Cloudnative Technologies at scaleuh so your part of my role is obviouslytalking to customers and working withour customer facing teams about what arethey seeing what are they needing asthey go down this pathway of adoptingand really you're using theseTechnologies as competitive tocompetitive differentiationuh and then taking that information andinsights back to product and Engineeringas we continue to improve our valueproposition all those kinds of things onthe partnership level I work closelywith marketing and a Partnershipsorganizationum and obviously Google is a key partneron a couple of different fronts numberone uh all of our customer SASenvironments are deployed in gcp thankyou for the reliabilityum and uh zero that's a key part of itbut then also uh at the sort of broaderlevel Google is a key partner for us inGoogle Ventures is a key investor aswellput it over to you yeah uh hey everyoneI'm bernit I'm a Senior Solutionsengineer at uh datadog working withmajor accounts on the west coast and Imyself take a very systems orientedapproach to observability and buildingout observability cultures is what we dowith our major accounts on the westcoastum and I think running Advancedworkshops around APM tracing mechanicsprofiling just the whole gamut ofdatadoc product Suites and just acrossthe observability space in generalum we've invested heavily in the GoogleCloud integration and just thepartnership we really believe in havingthat uh sort of pivot ability betweenall observability data and GoogleCloud's uh you know offerings have beenvery beneficial in that and justco-marketing together and workingtogether has been just extremelybeneficialwait yeah how you doing um so I'm WayneSeeger uh I'm a global field CTO atdynatrace I've been there for abouteight and a half years nowum and basically part of my role is uhspending a lot of time with ourcustomers uh and really helping themtake advantage of the platform and youknow uh you know I like to say you knowfrom a business side right we we try tomake sure that we can keep planes takingoff uh we make sure that when you go tothe grocery store you can actually checkout and you're not being frustratedright so that's basically where we youknow kind of focus a lot of our time andeffort and I'm certainly grateful for alot of the partnership that we've hadwith Google over the yearsum you know obviously we run parts ofour own platform in Googleum in addition to a lot of the otherproviders but also as well being able tointegrate deeply with the platform sincea lot of the customers utilize thoseServices uh to run their own businessright so very important to havevisibility theregreat awesome thank you for thepartnership everybodyum I want to start with taking a stepback andum so we've gone from traditionalthinking around monitoring whichessentially existed as an I.T conceptsince the Advent of the internet to morebroader definitions of observability uharound monitoring logging managementcollaboration AI Ops Etcwhat do you think of observability as aframework and its componentsin yeah so I think it's important whenyou think about the evolution and allthe other things like there's more logsthere's different kind of uh terms andall that kind of thing just want to takea step back and the key outcomes are thesame as they always werewe need to be able to understandperformance and issues allow engineersand operators to solve these thingsprovide excellent service and uptime fortheir applications to drive businessoutcomes like that's table Stakes butthe context and conditions have reallychanged particularly with you know cloudand then Cloud native Technologiesmicroservices and containers so you havea lot more complexity right we used tohave monoliths now we have these complexindependencies not all of the requestchain is being touched by the sametechnology stack maybe have acombination of serverless andmicroservices maybe some Legacy monolithin the back end and so being able tosift through all of that data from anend user perspective is obviously quitedifficult but secondarily particularlyas you really invest in Cloud native thegeometric explosion of data posesanother set of problems number one humanbeings can't pass through it so youobviously need automation there butthere's cost performance reliabilityimplications of all this as welland so if you think about a frameworkthings like instrumentation dashboardingquery language these are all like thingsthat you absolutely should be thinkingabout and obviously they're part of manyproducts uh on the market or even opensource Solutions but I think one thingthat's maybe missing that we need tostart really integrating particularlyfor those of us who are on this you knowCloud native bent is this aspect of datacontrol and refinement and making surethat it's actually valuable so if we'reable to understand what data we're usingthe outcomes that we're trying to drivetowards and refine that data down it hasreally interesting implications becausethe opposite side of it is that we justgohey I can't afford to go and do thisinstrumentation I can't uh go andcollect data from my pre-productionenvironment because it's too expensiveor maybe it has a performance impact onall these other things so is it anotherway the observerity framework reallyneeds to make sure that Roi obviouslythe sales term but return on investmentright make sure the investment piecedoesn't just grow astronomically despiteall the cool things that we've done onthe return side add new features andfunctionality to drive those better keyoutcomesfor me yeah I absolutely agree I thinktaking a systems through Theory approachto it is really understanding okaywhat's my system's homeostasis so thatbecame harder when you know you'relooking at up down signals and then nowyou have all this geometric explosion ofdata you have uh so much distributeddata uh you know how do you how are youactually able to forecast andproactively approach observability whereit used to be just very very reactiveand that's where you know the approachthat uh you know we consider aroundcentral observability is getting controlof that data and really kind oflocalizing it but then how are youutilizing that data to actually say heywhat's my Baseline and then what is adeviation from that Baseline right itcould be whatever type of system butum just cataloging that and actuallylearning that and actually propagatingthat across major business units reallyis key around thatyeah I think it you know definitely islike confusing right when you starttalking about the different terms thatare out there I think everybody'sprobably heard monitoring observabilityTelemetry you name it it's like alphabetsoupum but you know the way I like to lookat it is if you think about you knowmonitoring was always kind of very muchabout is it up is it up or is it down isit fast or is it slow right that waskind of very much reactionary or justtrying to understand what was going onum when you look at like theobservability state the way I like tolook at it is it takes you to where apoint where yes you're still using it toget those uh those answers about andsomething up is something down is itworking but being able when you reallydive into it to actually use that thatrich data that you now have a plethoraof being able to use that and actuallyyou know take that to make kind of likebusiness decisions right be able tounderstand okay you know thistransactionum was related from this user segmentand so for some reason this user segmenthas a better performance or betterexperience and maybe converts better ordoes something different than anotherone right all that data is there from anobservability platform it's all there touse so I think now really tapping intothat and being able to use that and thatto Ian's point you knowum you know takes the the real Roi rightthat that helps your Roi because nowyou're getting more value back from yourinitial investment in observabilitygreat uh let's take a customer use casea key concern for a lot of Enterprisesis around security and compliance andprivacy and adapting to Industrychanging and specific regulation howdoes observability help businessesmaintain a strong security posture andcomply to these ever-evolvingregulationsyeah yeah I think maybe three thingsthat I want to talk about here uh sonumber one when you think aboutobservability data and your security usecases there's a lot of value acrosspollination and making sure theobservability data can be used tosupport some of these security use casesnumber one rather than treating thementirely as a silo so being able to sayuh you know similar to the kinds ofthings that Wayne talked about like ohwhat is the business impact of thesecurity incident could I understandwhich customers had a performance impacton this observability side help justifysome of the decisions we make on thesecurity sidesecondarily on the regulatory so manycompanies have sensitive data and withthese complex independencies how do Iseparate out some of that data forsensitivity purposes but don't introducemore friction when on-call Engineers aretrying to solve a problem that Mapsthrough this dependency that's quitesensitive it's it's a complex trickyproblem I don't think there's a silverbullet but it's definitely somethingthat the solutions themselves need tosupport and be flexible towardsand um on the third piece of it bothsecurity and observability solutionshave potentially very large impacts onsystem performance right the collectionof all of this data can be quiteproblematic and you know you've gotsampling and all these other things butultimately you need to make IntelligentDecisions there's no one-size-fits allso generally as an engineeringorganization and even as a team you needto make some choices and trade-offsintelligently and this might be thingslike Dynamic instrumentation it could beI need to post process my data moreeffectively and this also has impact onagain what can I get out of thatsolution is it going to be costeffective is it going to be Timelyyeah agreed there and I think where wereally have taken approach is looking atapplication security right the securityspace can get so saturated with allthese signals is what's different from aSignal's intelligence perspective so atdatadog we really looked at applicationsecurity monitoring is hey these are myvulnerabilities this is the entiresurface area and applications representsuch a large uh sort of component thatget leveraged uh by attacks right youthink of like log for J you think of logfor Shell uh all these applications outthere in the open uh they're very veryvulnerable so how can we supplement thatdata from you know data we're alreadygetting right we're getting data fromtraces we're getting data from logs likehow can we actually use that intelligentTelemetry to assist these uh sort ofsignal intelligence use cases laterallywith the devsecops branch that existsnow but at the same time right there isa sort of governance Factor when itcomes to this data explosion is becauseone of the main things around thesecurity world is false positivebehavior and the explosions of fatigueright you have the knock you have allthese dub off folks who are frustratedand exhausted by all this data thatthey're you know having to absorb andactually scan alongside thatobservability data so how can we reallycompress that and then you know as afactor of all that is just overhead ofthis data collection is again governancecomes into into play is okay what are mysort of shift left uh surface area uhsort of mapping that I can do to reallysay okay what do I need to monitorreactively so I'm not like overmonitoring from a from a you knowsecurity perspectiveyeah and I think you know we're we'reprobably very much still in the earlyInnings of the security andobservability overlap but we're at we'restarting to see that uh starting tohappen more right you can even read someof the analyst reports out there thatare kind of saying the same thing butwe're we're very early I think one ofthe inflection points and and prettyjust mentioned it right lock for Shellwas one of the big ones becauseobservability Solutions right so it'snot something we experience a lot atdynatrace um you know when long forShell came out and decided to ruineverybody's Christmas a few years agothat I'm sure everybody's probably is ifyou were involved in it you you have thescarsum but uh you know used to what we sawwas that you know the observabilitysolutions actually saw faster than a lotof the Security Solutions that thevulnerabilities were there right we evensaw that now with the more recent moveit uh vulnerability that came out so Ithink we're kind of very early in cometo that cross-pollination happening butI think that uh some of the securityteams are starting to realize yeahreal-time observability data it stillplays a big factor in um and is startingto play a bigger role in in as anadditional signal from a securityperspective right so there's definitelysome overlap there and I think that'sgoing to continue to merge uh kind of aswe go forwardawesomeum so I think if we shift gears a littlebitum you know we're obviously in an era ofyou know Cloud native applicationsmicroservices uh so I'd like to ask ourpanel starting with uh with Ian uh whenyou think about that specific you knowuh deployment scenario uh what are thekey challenges for observability and howdo you overcome them um start with theUnion yeah so as I've already alluded toI really think one of the key challengesis the volume of data and thishas impact in so many different ways uhI'm assuming many people here have hadthat situation of like well we can't dothat because it's too expensive or I didthat and things got really slow in theobservability solution my alerts stoppedfiring those kinds of things so beingable to manage the data growth but thenalso be able to sift through thecomplexity starts to become this thishuge challengeso you think even just about on thecomplexity front ignore like the volumeof data we have all these newmicroservices we have to trace acrossthese dependencies you've got developerswho now need to reason about things inentirely different teams domain and thatmay come back or may go to some otherdependency or they may not even havevisibility into where it goes from thereand these introduce all kinds of newproblems so there's both uh hey this gotreally expensive and really difficult toto handle and also uh I've isolatedmyself from things that may be causingthe root cause of my of my problem sobeing able to sift through the datacontrol it and then make use of it isreally I think the core challenge and Ithink there's a fair amount of agreementhereum so yeah and then I I would say thelast thing is that uh engineeringorganizations uh are really starting tosee the issues with like not everyengineer and every perspective is thesame so the tooling needs to sort ofmeet the engineer where they areparticularly in this more more complexstratified microservices container typeenvironmentexcellent print yeah absolutely I thinkwhen you again look at it from a systemstheory approach is where am Iintroducing n by n problems right as wealluded to just in the in the firstquestion is you know it's more than justup down signals this observability datais really compounding and as soon as youget this distribution as you know Ianmentioned you're you're seeing thislayer one through seven problem justsort of unfold so it becomes thatlayered approach where where are my gapsright what's my total surface area andif it is an N by n like how can Icontrol this data and how can I sort ofgovern it and certain best practices andfundamentals really come out is am isetting the correct slos am I actuallysetting correct metrics thresholds formy you know alerting functionality andthen from a business functioningperspective is this also centralized asa knowledge base right is is everyonedoing things on their own or are theyactually you know moving uh in abusiness function to actually centralizethis and uh standardize all theseprinciplesyeah it's it's definitely the I mean Ithink we've all kind of said it the samechallenges where now there's more thingsto there's more things to getobservability from so we're gettingexplosion of data but it also that leadsto the risk then of you're missingthings right you know so it used to bein the monolithic world right you hadlike you know four different systemsthat were responsible for doing likeyour entire application processing andyou just everybody knew it right now nowthere's just new things there's newcloud services new stuff and so you knowone of the things I've started to see alittle bit is almost like this rise ofkind of let's say platform engineeringum and basically what that is or whatthey've kind of started to put in placewas kind of like almost like a frameworkor a guard rail to basically say likeif you're going to deploy something orif you're going to be developer andyou're going to deploy something inorder to get it deployed uh you need tobasically kind of have the box checkedas to you know what observability you'regoing to have in place you've definedkind of your slos like pretty was sayingum otherwise you're not going to passthe build stage you're not going to getit through the pipeline to get whateverit is that you're trying to do get itdeployed and that we're starting to seemoreum and also what that does is I thinkpeople are starting to maybe overcorrect a little bit into the developeryou own it uh type of Mantra I thinkthat works but you have to give themagain the guard rails make their lifeeasy kind of developer experience andkind of having let's say again aplatform engineering approach wherethings in terms of observability as aservice is part of that and just reallyalmost like a check box as part of whenthey're deploying things to theirpipelinegreat no that's some very insightful uhyou know answers on that topic Switchinggears talking about gen AIum you know how do you see gen AIimpacting you know your Solutions and Ithink the space in general how do howshould the audience think about you knowtaking advantage of that you know asthis continues to evolve and I'm prettyfast clippedyeah so I think for a generative AI atleast the the first pass obviouslythere's a massive untapped potentialhere everyone's super excited about itbut I think number one for observabilitythe immediate two things are input andoutput how do I ask my observabilitytool uh without having to go through anabstraction like a complex querylanguage right can I just ask it heywhat's wrong with my service everyonewould love that and then the secondpiece is well when the data comes backI'm sure everyone has that massivedashboard and you know the massive dataset that comes back from a query likebut what does this mean and tying backto what I said before about meeting anengineer where they are maybe they're anew engineer they don't have all theinstitutional knowledge about what'sgoing on so having that summarizedimpact I think is important but I thinkthere's probably two things I want tosay about from a caution perspective andthey absolutely inform the way thatwe're You're Building Products uh atchronosphere is oneEngineers are very sophisticatedaudienceuh black boxes they generally don't likeso they want to be able to understandhow the sausage is made and for anyonewho's played around with llms and allthe things out there you know there arehallucinations they're inaccuracies andif you're basing critical incident leveldecisions on that kind of thing you needto be able to validate that and makesure it's accurate so there's there's alittle bit of skepticism there and thesecond one I think is more about sort oflike corporate uh legal compliance andthose kinds of things there's I thinkparticularly the Enterprise a reluctanceto be okay well when I give you inputsinto generative AI I don't want that tobe then exposed to other customers ormingled and so from an implementationperspective I think being careful aboutnot just taking off-the-shelf APIthird-party apis routing customer dataover to it and then taking the resultsbackum I think there's definitely areluctance from at least a lot ofcustomers I'm talking to to engage withthat kind of initial MVP uh engagementyeah this is very uh interesting for forme I've been studying uh perceptual AIsince 2014 and just seeing all the sortof explosion in the space with uh justllms has been very very interestingum I particularly remember when you knowsomething called Gans came out to likeactually generate art it was a littlecreepy a little weird but they they hadsome output and now finally able to seecode-like structures like think likeJson data like log payloads and traceseven as a directed acilic graph beingintroduced as a data input where thesellms can make inferences about aboutthem one thing to really sort ofconsider here is llms are really limitedby their context length and as Ianmentioned they can hallucinate quiteeffectively too they they're very veryconfident in what they hallucinate andso it's important for observabilitypractitioners to think about compactionof that data and the actual uh Precisionof that data as well if you feed an llmincorrect data it's going to start toreason about it and we'll learn that heythis is the reality right because theway they they function right it's justreinforcement learning they're they'retrying to aim for a reward so it'sreally interesting just coming you knowthrough all these years just learningabout like how are these modelsarchitected how are they trained wecan't just throw them at a problembecause there is compliance issues thereare legal issues you can't just you knowgive uh just sensitive information andexpect something that that's viable asan outputyeah I mean I I think that uh you knowit very much in a short term or probablythe more realistic thing that we'll thatwe'll start to see is the things thatallow to reduce friction in terms ofusing uh and getting answers out of anobservability system basically openingit up where more people can takeadvantage of it I mean even even whenyou go let's say a higher level right soEngineers I mean they have no problemlet's say writing queries to get answersuh or get data back but go a level abovethat somebody who doesn't really want tounderstand how to write a query just tobe able to get a question about uh howmany people were impacted by an incidentyesterday right I think those are thethings the possibilities that the thellms immediately open up to particularlyin the observability space I think thatthat has a lot of potential and it youknow has has potential to happen youknow relatively quicklyum with you know again a lot of the lesslesser of the downsides that some of thellms can can haveum and then I think then you know italso presents a fact of you know you cangenerate things things like dashboardsright that's another thing even evenmentioned that but also even then youknow you can ask it a simple questionaround documentation right how manypeople love going around Googling aroundthe to try and find the answer tosomething about some productsdocumentation right that's where llmsagain can have a very immediate impactin just pointing you to the right spotbecause it's reading the naturallanguage of your question and thedocumentation is written away that thellm has been trained to give you theappropriate answer I think that canreduce that friction and also you knowincrease the effectiveness in terms ofadoptionso using AI to do better things fasterrightum I want to switch gears to open sourcea little bit the importance of openplatforms Open Standards andinteroperability is growing andobservability tools are working moreseamlessly togetherwe have initiatives like open Telemetrywhich are gaining momentum to create aunified approach to collecting andexporting Telemetry data in fact Googleis a big contributor to open source andthe open Telemetry initiative and madesignificant contributions to itsdevelopment how do you see your companyapproaching the open Telemetryinitiative and how do your Solutionsinteroperate in this space we can startwith maybe weighing you first yeah so Imean I think open child I think one ofthe funny things about opentel when itkind of became uh you know let's say abigger thing you know a few years agokind of like the open standard althougha lot of people had this kind of likeyou know almost a misconception but kindof this understanding of saying oh okaythis is now going to be the new thingthat just replaces everything inobservability which obviously is nottrue it's actually one of the bestthings in terms of being able toincrease data quality and get insightsinto layers that was difficult as youknow a vendor to be able to get intoright so I think that's been huge and asyou know in dynatory specifically rightwe've spent a lot of time and a lot ofeffort contributing into some of theOpen Standards like the w3s 3C Tracecontext which was now great to have atrace uh identifier that was actuallyagreed upon rather than everybody havingsomething different that nobody knewwhat anything meant um so that's that'sbeen probably one of the biggestbenefits that you've seen out there andyou know from a hotel perspective youknow we basically treat it as a as afirst-class citizen so whether it's atrace that's coming from our system fromour from our agent or from an externalsource and being able to put thattogether into a single view which iswhat everybody wants I think is is greatso I think that this space is you knowreally really taken observabilityforward and helped adoption and help youknow people be able to utilize it betteryeah I agreed I think it's uh justreally uh just excellent for the spaceand at datadog we've really contributedto the hotel collector and our ownexporter we expose our tracing librariesto augment the uh Hotel out of the boxtracers and as Wayne mentioned as afirst-class citizen we want to make itindistinguishable in the platform it'snot just something different I thinkwhere we really assist uh clients andjust the space in general is should Icommit to Hotel it doesn't have to justbe a if I go Hotel there's no going backright you can take these hybridapproaches you can take you know vendorproprietary uh you know TelemetryBridget with Hotel augment that hoteldata and then vice versa too there's alot of things you learn from the otelcommunity and around span contacts orw3c context or Trace ID propagationwhere all these APM contacts were soBlack Box uh as it pertained to you knowthe past uh where we're really kind ofunlocking that as a space and at the endof the day for the customer it is reallyabout that diversity of telemetry righthaving more options is just better forthe space overall which is better forthe vendors right so it's not a it's notnecessarily a competitive thing that welook at it withyeah uh we've all worked at vendors whohave proprietary agents all that kind ofthing and that you know definitely was astate of the art uh while ago um andobviously there's a value of it now buta lot of the customers that I talk toare wanting to make sure that it's notall legs in one basket as you saidum but I think it's actuallyinterestingly very powerful for thevendors and then subsequently forDownstream customers because now a lotof the effort that goes into sayinstrumenting a new technology rightlike a new data pipeline or somethinglike that it can be done once in openTelemetry and it can be done with theinsights and the expertise of Engineersfrom dynatrace and datadog andchronosphere are working together asopposed to sort of going off intodifferent places and then if you were tomove between them from their proprietaryplaces oh this looks completelydifferentso there's there's absolutely I thinkinstrumentation is one of those thingsthat it's it's very much you know Risingtide lifts all boatsum for for chronosphere we are a opensource standards first and basicallyonly uh solutionum because we're slightly newerorganizationum and then one of the things that we'reinvesting in with open Telemetry isspecifically around and you probablyheard me say the word control but evenin the open source side of things howcan I control so like tracing forexample everyone knows about like headbased and tail-based sampling but a lotof the times if you want to go andchange head-based sampling in yourapplication you've got to reload yourapplication so if you've made some Ithink frankly cool contributions therethat allow you to do some some stufflike dynamically go and change thatwhich benefits everyone not justchronosphere customersum and so I think that's really the corevalue of open Telemetry as a project islike I think it really has started toshow its ability to lift the wholeindustry still a lot of work to goum and there's going to be a lot morework coming but uh yeah it's uh prettyexciting thank you now continuing tospeak about open source as containerorchestration with kubernetes becomesmore and more prevalent a lot ofobservability solutions are adapting toprovide more comprehensive monitoringlogging and tracing data andcapabilities for containerizedenvironments if you think about this inthe context of something like Googlekubernetes engine or gke we've seen thatwe have Master metrics which is themonitoring and metrics data related tothe kubernetes control plane in the GKcluster andum you know we have actually an activepartnership with dynatrase data dog andchronosphere in building theseIntegrations and providing this metricsand data to to our customerscan you speak a little bit on uh to someof this and how are your customersseeing the benefit of these Integrationsmaybe we can start really explaining yesI mean I think it really comes down to Imean now that you're running when youstart running things let's say on on uhkubernetes on you know gke right so nowyou've obviously offloaded uh a sectionof of the infrastructure right so theresponsibility kind of changes but youstill want to be able to understandyou're still responsible for some of thehealth of that stuffum and so that's where again the thepartnership with with Googleum on on our side on dynatrace's sidewhere we're able to now get thoseadditional data points but then marrythem together with the other insightsthat we're getting from the applicationsthat are there to really give you againsystem Health right so then if there'sactually a problem with maybe you'reundersized and you don't have Autoscaling enabled uh you can actuallyunderstand that that's the problemthat's impacting your system rather thanyou know kind of being blind to it rightso I think that's probably one of thebiggest things and again one of theprobably most important thingsum that we need to make so make sure wedo as as we take advantage of more cloudservices is still again getting theright Telemetry for the things thatwe're responsible with and but have acorrelated directly with how thatimpacts again the whole system becausethat's that's where the time save comesinyeah certainly that uh abstraction layerhas led to a common observabilityvernacular that's understandable acrosslike the kubernetes ecosystem you'dthink of Docker you think ofcontainerization uh this helps you knowjust observability at large becausethere is that sort of standardization ofmetrics traces logs and expectationacross business units when it comes toyou know how should I reason about thisapplication but I think what Waynementioned earlier was like a centralizedplatform engineering culture sort ofdevelops right we've noticed that a lotof folks that uh do utilize gke orkubernetes they're starting to buildthis sort of hybrid platform engineeringculture and observability really fits inwith that whether it be through aservice mesh or whether it be throughyou know even open Telemetry there issort of this cataloging that starts todevelop and that just benefits the spaceat large againyeah from the customers we talked tomany of them on gcp uh many of them in ahybrid motion or you know moving it'sabsolutely table Stakes right you haveto know what's your infrastructure isdoing and just as uh the other panelistshave said tying that up into thebusiness level problems particularlywith a move towards SLO driven uhoperations right or Incident Managementit's like I don't want to necessarilyalert every time I CPU spikes I want toknow when the CPU spikes and that'scausing me to lose Revenue so tying thattogether and not going you know bottomsup like we I think traditionally in theindustry have gone but like really gotop downumit doesn't obfuscate the value of it butit really means that you have to be veryparticular about making sure all ofthose things are in place before youneed them and so that definitely speaksto you know the partnership and theIntegrations that we've made sure tobuild and then I think one of the greatthings from a gcp perspective and yourthe expertise in gke is being able tofilter that through to customers ormaybe adopting kubernetes for the firsttime and like well what are the I don'tknow I I need that so being able to helpfilter that through and provide some ofthat uh diffuse expertise to thosecustomers like these are best practiceshas been a really big part of the thepartnership that we've had awesomethings I want to shift gears a littlebit and talk about serverless Computingnow with the increasing Evolution andAdoption of serverless computingobservability Solutions are evolving toprovide better insights into serverlessfunctions things like functionperformance or traceable uh tracingexecution Etc can you speak to thecustomer demand for some of these and inparticular the value of Integrationslike for example the ones we've had morerecently with the Google Cloud run whichis our serverless platform we can startwith you yeah so I think you knowserverless specifically you know isdefinitely uh you know grown you knowpretty much exponentially in terms ofusage over the years I mean I thinkinitially when you know people startedusing serverless or functions they wereusing it like for like almost taskoriented type of stuff it wasn't let'ssay you know part of the criticalapplication or the critical Revenuegenerating applications for a businessthat has started change I mean we'redefinitely starting to see that happenmore frequently and for obvious reasonsI mean there's obviously benefits todoing that and um you know where I'mseeing you know specifically in theobservability space this is this is kindof where it almost like open Telemetry alittle bit ties into it right becauseum you you now have like an openframework that is now part of aserverless function so it continues tobe lightweight it continues to be in anopen standard and being able to getTelemetry from it so there's actually alot of synergies that we're seeingbetween thoseum particularly again getting getting alot of those open kind of standardtracing and metrics and stuff like thatfrom from those from those platformsright so I think that's that's actuallya big thing that that we're seeing nowstarting to happen and you know probablycontinuing going forwardyeah I think again speaking to theabstraction that serverless canintroduce right now you've abstractedaway that infrastructure layer when wethink of kubernetes there's a lot oforchestration that's been managed and alot of uh sort of Auto scaling spin uptear down uh that gets managed obviouslythere's Health metrics around that soyou have to ship gears around serverlessthinking of like cold starts or justreally really microscopic latency uh youlook you have to look at those executiontimes uh overall uh you have to look atthose outlier patterns but then there'salso cost governance right like there'sa governance pattern between okayserverless can really really scale upand how do I actually quickly Monitorand alert on those sort of costgovernance patterns that's that'sextremely important so I think from ourangle and I think uh you know just thespace overall is treated likestandardization right like when there'soutbound calls or where there'sserverless integration uh you knowthrough Google or uh you know throughAPM or through any sort ofinstrumentation treat it just like anyother service pattern where there'sminimizing context shift for youroperators because uh the worst thing youcan do is actually just introducecontext shifting right is treat itcompletely differently completelydifferent namespaces that introducesmore context shifting and we've talkedabout just that explosion of data timeand time again and that's that's justreally important to think aboutyeah I think related to what Wayne saidearly on the shift was hey we areadopting this and it's a silo and Ithink a lot of the early toolingrepresented that because it reallywasn't connected to pronate's point uhand you take that first generation oftools that gave you insight aboutserverless functions and Cloud run uhandyou start to say okay well I'm going touse this for a critical part of myworkflow because it's the best tool forthe job right it's it's what everyengineering organization wants I need tobe able to tailor what I'm doing oh Ifound this use case which is ideal forit but now it's part of that big complexhole we keep talking about but oh no theinsights the observability for thatstuff is completely slided off I have tocontext switch and it doesn't let meTrace through I basically have a blackhole and that I think has been a realproblem and it's almost caused a littlebit of a chicken in the egg thing wheresort of that second phase of adoption ofserverless was a little bit held backparticularly in larger more complexenvironments because the observabilitytooling didn't treat things at leastfrom like even a request perspectivehomogenously right there's obviouslythings like you said like cold start andthese are very specific to thetechnology but hey a request goingthrough anything should be treated likea request going through anythingum so there's definitely a really biginterest we see from from people doingthings like that and I thinkinterestinglyparticularly for serving customer facingelements for for front end rather thanhaving you know your traditional likefront-end separation that leads intolike a back-end serviceum you know front-end service back inservice now I was like oh all theserequests are going to go throughserverless from my mobile deviceum but now you you know okay you need toconnect it to mobile and your browserand then you need to connect to them soit's it's all that complexity feeding intogether is going to drive more of thatadoption and being able to get value soit's the right right tool in the toolboxfor the right timeexcellent so I think um shifting gear istalking about a little different topicuh you know and we're also you knowcoming up in time butum I guess my question for you knowstarting with Wayne is uh how should youknow folks think aboutcost optimization resource allocationwhen it comes to uh you know better costefficiency from a delivery Viewpointyeah so I think that's obviouslysomething people have started to paymore attention to nowum probably over the last few yearspeople have kind of you know been in theexuberance of building and notnecessarily caring about the cost orwhat that you know Optima basicallyoptimizing it just getting things outthere and you know however much it costto cost so I think people are definitelynow looking at that with a little bitmore scrutiny to say look we've deployeda lot of this stuff it works great butwe could probably optimize this we couldeither take advantage of a differentservice that saves costs and has thesame performance and observability ofcourse has a big factor in that becauseyou know you you you're one you'realready getting Telemetry from thoseServices right so you understand howthey're used how often they're used howfrequent they're used and then secondlyyou can understand you know are you overallocated somewhere right you know howmany times have I seen it where the uhyou know somebody deploys an applicationand they've got you know they're usingyou know different VMS different cloudservices out there that are like 10utilized right so they're they're wayoverspending for something that doesn'tneed to be there and it's pretty easy todownsize that right it's easy it'srelatively simple to change that versusyou know back in the old data centerdays you ordered that big machine in thedata center uh and it was you know youwere under utilizing it well you got tofind something else to put on it rightyou didn't have you didn't have theoption to just scale it down so I thinkthat you know when you look at those twoaspects um that's where observabilityreally comes in is giving you thatinsight and being able to see whereyou're where you're over provisioned andwhere cost savings can come into playyeah and particularly with what we'redoing you know just uh echoing Wayne'sthoughts here is uh just Cloud costmanagement in general I did it on ourIntegrations we're introducing Cloudcost management as a factor ofutilization so you can actually see okayis this underutilized is this underprovisioned over provisioned can I scalethat up and down uh We've also looked atexercises where we can actually use alot of that rich observability data andI'm talking about profiling right whereyou can actually look at code level uhyou know profiles look at Deadlocks lookat wait times and actually optimize codefor maximum utilization but alsoassisting you know a lot of ourcustomers around hey like you if youhave a data center with fixed allocationright and that's actually impacting yourbusiness there's a lot of datapipelining there's a lot of AI workloadsnow where can we actually Leverage TheCloud to actually scale up at a veryfast rate because you can't do that at adata center there's bandwidthlimitations there's Hardware limitationsright so it's a dual factor it's notalways just about cutting costs it'smore about like cost movement right iswhere can we best utilize the cloudresources that we have available to usyeah uh we talked before aboutcross-pollination between security usecases and observability and just like uhWayne said it I think it's a verysimilar thing like there'simmense value and the observability datafor outcomes other than whattraditionally observing borrowing havedone so that's that's absolutely truebutI think there are patterns that we cantake from finnops right when you thinkabout oh hey I really want to make surethat I'm getting the most value out ofmy my hardware and my gcp spend and allthese other things uh and then youshould also be applied to observabilitytooling itself and the Telemetrygeneration becausethe pattern we're seeing is that moreand more often observability for anengineering organization is a top threecost and particularly after the last fewyears of you know runaway growth andeverything like that people are like ohis this is this really commensuratevalue with the the bill that I'm seeingand so cost attribution being able tounderstand am I utilizing the data whatvalue does it bring meum all of those Concepts we've seen alot of high demand from the market foruh and you know we've been able to tobring some of those to Bear within ourproduct as well so I think it's you knowunderstanding that data collection andthe analysis and the insight and likegetting value from all these things isthe same like it's across security it'sacross phynopsis across observabilityand so it's not just oh we can use thisas a very big observability data to helpthose things but we should also take alittle bit of the cues from well whatvalue are we getting from some of thoseother use cases as wellexcellentum I'd like to you know sort of uh thankour panelists for uh you know covering arange of topicsforeign"
}