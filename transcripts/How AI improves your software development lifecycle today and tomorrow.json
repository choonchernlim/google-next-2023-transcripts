{
    "title": "How AI improves your software development lifecycle today and tomorrow",
    "presentation_type": "Breakout",
    "categories": [
        "AI and ML",
        "AIML216"
    ],
    "video_id": "xlbh9Rb82-4",
    "time": "Aug 30 04:15 PM - 05:00 PM CDT",
    "transcript": "foreign[Music]I am so happy to see a packed house I'mso excited you all are here to um hearour live it is unscripted there's youknow no Bard no code chat bisongenerating the responses we're going tohave a discussion today about how AIwhat we expect in the future how willchange every stage of the softwaredevelopment life cycle so that's notgoodwho all do we have in the audience[Applause]so who all do we have in the audiencewho's a who's a developer or an engineerokay awesome do we have any uh SREdevops folksml engineersokay awesome we're gonna have a broadconversation so I hope everyone takessomething fun away so let's actually getstarted my name is anushree vastava Iwill be your pilot on today's flight I'mgonna let all of these folks introducethemselves starting with me Kelly thenI'll uh say my background and then we'llget started with the questions sointroduce yourself but also addsomething fun what was the firstsoftware development tool that youreally had to have to know or what'syour favoriteall right let's do this hi everyone I'mMichael catastra I lead the AI team atrapid and the first developer tool I'veever used in my life is a basic Rebel soI think it's fate for me to be workingat rapid for everyone Rebel is a reallyloud print Loop and I think I was a verysmall kid back in the daysuh yeah so uh Adam Jones uh working Gappliances leading the cloud engineeringiot teens there uh you know uhfirst tool that I would really like touse wasthe very first version of Visual Studionice way back you know I'm dating myselfbut yeah sohi my name is Erwin I'm one of thedirector of program management at Googlearound vertexand I'll skip the tool question becauseif I talk about basic programming I'mtelling you too much about my ageso I just said that I relate to thisbecause it reminds me of a bigtransformation in one of the startups Iwas leading a few years ago when wemoved from on-premwaterfall into Cloud agile with somecontainers and I had Fortune 500customers trusting us to do that so I'mvery excited about this conversationthis afternoongreat awesome so I'm Richard I doproduct management and developerrelations andFirst Tool I am a political sciencemajor so I have no business working atGoogle I guess but I was also doing somewebmaster stuff in college and we'reusing FileMaker Pro as a back end sothat was the first thing I had some funwith in the 90s oh nice I am going todate myself thank youmy name is anushree vastava so I am oneof the leads for Applied AI advocacyteam here at Google I've actually beenat Google for almost 10 years the firsthalf of my career I was actually asoftware engineer on our famous maybeInfamous developer experience tool stackso you know back then we just couldn'thave predicted the opportunities that wehave now with these generative models soI'm really excited to kick this off soyou all ready let's do it okay greatokay uh let's go over actually uh to setthe context this is a softwaredevelopment life cycle uh we'llreference this again you know as we goon but the stages are requirementsGathering design coding testingdeployment maintenance and then last butnot least retirementwe're good at that oneso let's actually warm up so this is awarm-up questionso what do you see the impact of AIassistance and tooling powered by AIwhere do you see the biggest impacts inthe short term and then follow-up whatdo you aspire to see in the long termwho wants to go firstum well I'll take a shot huh umso for me you know my teamsum generative AIspecifically has been a real gamechangerumand we you know earlierthis year Isat with the team I said hey you knowwhat let's do a hackathon and let's justdissect the sdlc and let's figure outwhat we can do with Junior AI rightwe saw a real impact particularly as youshift left on that sdlc right you lookat business requirements together youknow one of the I'm sure everybody inthis room has that problem of Gatheringbusiness requirements from the businessand translating those into the technicalrequirements to start work right it'sjust this process that can become veryimpactful and lengthen your yourdevelopment time soyou know we we started injecting uhgenerative AI capabilities into thatprocess right awayI think we're going to see 10 20 30percent productivity improvements out ofthat you don't have to mention the restof the cycle but really really excitedabout those kind of capabilities thatwe're seeing on General AIgreatanybody want to add to anything becauseI'd say I mean the short term I thinkit's going to complement what we do Ithink the long term it changes what wedo like in the short term right we'rejust doing our existing processes butwith some you know sprinkle some AI onit and that'll be helpful it helps us dothe same coding or testing processesdesign but I think what we're seeingthat this is going to maybe even happenfaster than we think that then afterthat long term we probably don't even dosome of the same things we're doing nowlike then it's not complimenting itactually can replace certain things getrid of toil so for the next you know 1218 months hopefully it just makes all ofour jobs a little better hopefully in 18to 24 months it makes our job a littledifferent awesomelet's go to our next questionso now we're going to go into thesoftware development life cycle so everygreat project starts with an idea rightso where can we see AI influencing theideation stage brainstorming Gatheringrequirements wireframing all of thatso when we chatted a little bit lastweek to get to know each other I heardthe story at GE Appliances onrequirementsand you know the product line I dealwith it's about the model and helpingyou code completion and whatand this is before in the cycle so Itested the idea in a bunch ofconversation since then and I think it'sit's pretty huge because there's a lotof friction that is experienced thereand maybe you can converge faster on onrequirements so I would just encourageeverybody to take a look it soundsreally promising although it's not inthe code development phase per sebut what really excited me like at thekeynote uhyou guys announced the extensions rightextensions into jira and Confluence somy team we actually wrotethat before you guys had uh releasedthat so we're pretty excited about it Iwas talking to my team we're like heynext week we're wiring that up so that'svery excitingKelly you got any thoughts on this nowone thing I like about putting AI inthis software especially in the you knowwireframing and brainstorming cycle isthe fact that it helps you to avoid thewriter block as we are seeing you knowfor writers the same thing happens withsoftware right so you have a you have acompanion that you can chat with evenbefore you start to run your first lineof code so the AI cannot be to figureout okay these are all the options infront of you where do you want to go andthen it can also help you to split intodifferent subtasks your project I'veseen people using in that way I found itfascinating I think I'm too opinionatedas a developer and I love to see youngerpeople having a conversation with an nlmto figure out exactly what they shouldbe doing so I expect this to happen moreand more often in the futureyeah I would say the brainstorming I waswatching one of my colleagues the otherday do uh you could take a diagram rightnow if you use our architecturediagramming tool if you've seen thatit's free you can build some really cooldiagrams with that you can save it as animage send it to Bard and say hey canyou find any security risks with thisand it'll go ahead and give you somethings I think for brainstormingfiguring out requirements it's kind ofcool to use AI to assess yourarchitecture for you and you can discardall the recommendations but it mightgive you something interesting if youhadn't thought about same withwireframing that I love about you I'mterrible at you eyes and so what I alsotried even with Bard is just giving itthe description of my Json payloadsaying hey can you give me a front endand I could add some data and call thatAPI and it gave me a full HTML CSSbootstrap UI so again if I'm just tryingto wireframe quick I don't want to doall that like that's amazing so ifyou're just doing some brainstormingtrying to get some ideas I love thatthese things are helping us with thatyeah I'm glad that you brought up youknow having security considerationsearlier in the life cycle there is youknow a whole host of these one of ourwhat are our deployment considerationswhatever scaling considerations what'sour documentation if we can pull some ofthese questions earlier in the lifecycle I think that that could be reallyrevolutionarydefinitelyokay next questionokay this is a little bit of a long oneso how do you see the role of softwaredeveloper changing as AI permeates allof these stages of software developmentthen follow-upwhat tasks are now automatable thatweren't and where do you see this goingyou know what I see you smiling yeahyeah the reason why it's modding isbecause I believe AI is not going toonly change the role of the softwaredeveloper is going to change whosoftware developers areum we've been talking at the beginningabout this sort of vertical expansion ofskills so developers will become moreproductive more capable I think what I'mexcited about and what we're excitedabout the rapid is also the horizontalexpansion the idea that I think today wehave maybe 30 40 million developers inthe world that don't call me on the examnumber and we can see them we should seethe number expanding very quickly tohundreds of millions or one billion plusso we probably have to reconsider whatis this software developer Persona thatwe Target today one year away from fiveyears from today and that's the partthat I find and most exciting about thisrevolution in callingyeah for yeah it's good and for me youknowone of the things that's that's changingimmediately isskill set capabilities within softwaredevelopers right sowhat six months ago nine months agoyou're interviewing somebody you knowyou're writing a job description forespecially for leaders out there you'retrying to you know resource your roleswhat were you looking for right thetraditional set of skills from whateveryou were trying to identify right now aihas been injected into every single oneof those job descriptions it'sparticularly generative AI what are youdoing with general of AI those are thefirst questions that we're asking peoplenow are you playing with it how are youplaying with it how are you using it Ithink you're going to see that changeacross the board as far as you know whatwhat the skill sets are they'redevelopingyeahI guess II'd say that there's a reason why uh wehave better technology than ever now weseem to be working more than our parentslike how is that we should be workingless right but I think it's because theexpectations keep going up and so ourexpectations are higher than they were50 years ago and so the role is going tochange because everyone's expectation ofyou is about to change it's going to beexpected that you have great testcoverage all over because it's not ashard to add tests to your code and thatyou can iterate a little faster becausewe can generate code to kind ofexperiment faster so maybe the rolewon't change a ton but I think theexpectations of all of you will go up onus as well and that's excitingterrifying and at the same time but Isuspect that's what we're going to feelthe most yeah I mean I definitely don'tthink any of these roles are going awaythey'll just change right there's an artto setting up testing infrastructure soit was an art to you know doing yourproduction deploymentsum that I'll say it I'm on camera I Idon't think that AI can really replicateyou know the human spirit yet so uhhopefully I'm I'm not wrong but we'llit's in beta but noit's close I'm glad that you brought uphiring I was actually I was trying tothink of a way to sort of trick one ofyou all to doing a whiteboard interviewsoum great so let's go on to our nextquestionso we talked about how AI will shift therole of what we think of as softwaredevelopers right now software Engineerssoftware developers let's actuallybroaden this discussion now let's thinkabout we touched a little bit on thisyou know how is it going to change youknow SRE qa's Tech writer systemintegrators how we think aboutarchitectureand umflip side you know there's a lot ofFocus right now on the coding stage ofthe software development cycle what areother parts that are not being thoughtof right now that we we think that AIcould really impactyeah so a lot of conversations aroundgenerating tests I think that'sdefinitely something where it can helpbut above and beyond the list of taskswhere it can help I'm really wonderinghow do we integrate this in the workflowof the developer because eventually ifyou need to go out of your context toget some additional help you may do it afew times but are you going to bringthis back so I think we need to it'simportant to understand where this thingcan help but also how we are we bringingthis in a way that's very natural forthe developer to use as opposed toplaying it five timesand I'm sure we stopped seeing I mean wecan read the first stats on which areasof the cycle are the most impacted butthere is more to be looked at outside ofcode generation competition to reallyunderstand how making the effort ofintegrating that so is do you have yourown ID and you want an API or are yougoing to rely on a third party to renewthat inclusive experience but if youlook at similar revolutions priorit's all about making this easy fordeveloper to followit's great but if it's for a few peoplewho have the time or the patience toswitch context all the time it's notgoing to make the changes we just talkedaboutyeah and I I like you know seeing theintegration of these tools like whatwe're seeing you all are announcingright again back to my hackathon webuilt 19 built a whole bunch of customcapabilitiesleveraging bar leveraging text bisonleveraging these models Etc to help usin the sdlc right various stages devopswas one of them because like for exampleuh you know generate me a bunch ofterraform scripts right and one coolthing we did we went out the bar andwe're like I just went out there I waslike heyum you know I got this idea for an appthis API you know I want to do this Iwant to do that righthow do I do this can you give me anarchitecture it did hey what services doI use in gcp it told me that right itstarted setting all this up for meokay how much time do we spend sittingthere thinking about that writing thescripts that we need Etcumcan we can we shorten that cycle rightand then just become like we talkedabout how are the role of the softwaredeveloper going to changehow much time are you going to not spendthinking about that thing anymore andjust looking at what was outputted andvetting it and saying gohow much faster can we get delivery toMarkethow many of y'all have ever beenfrustrated with how many times you haveto switch contacts just to get somethingdoneso everyone else is a liarall rightI have a controversial take to add Ithink one year there is going to bedisrupted by Ai and we're not discussingit too much is the No code experienceit's controversial for the followingreason I think we always associate nocode to actually not writing a singleline of code but the difference there isusually those platforms have offer likea very rigid experience on how youdevelop software and there was a I thinkour entry point to bring development topeople that are not experts and I thinkAI is going to lower the barrier ofentries so much that a lot of peoplewill feel more courageous to try to useplatform where you actually write somecode or at least you see the AIgenerating it and you try to make senseof it I've seen this in person duringagathons I think is one of the bestexperience that you can have as an AIsoftware developer to figure out howpeople use our tools like in the case ofRapid we do this on a regular basisbecause we want to see our users what'stheir impact on the platform and I'veseen a lot of people who say one yearago would be using our no code platformwhere now there more daring because theyknow that there is an AI and buildingthem during the software developmentprocess so no codas are space in theworld absolutely but I think you knowthis expansion of adding more userswriting software will happen alsobecause it's less scaryyes he was an AI yeahI mean I'd say for each of these if youdon't see how generative AI may impactit you're maybe not thinking hard enoughlike all of these feel like they've gotsome impact if I'm a tester I don'tthink I ever need to hand generate testdata again I can go these tools andgenerate 10 000 rows of something andimmediately have test data if I'd liketo an architect as we talked aboutearlier could generate and testdifferent architectures and poke at themeven simulation something that we'reworking on of how do you simulatecertain scenarios and try to play thatout that's going to be awesome I don'tthink you're writing base docs the sameway anymore because we can generatebasic documentation we need then thesmarter kind of more complicated docsthe integration scenario doc so I thinka lot of the toil the goal is the toilgoes away the things we don't reallylike doing so for any of those roles youcould be a business analyst you could bea tester an architectI don't see how this is not trying tostrip away the toil yeah all right myfavorite use case for LMS right now isactually to not only generate test databut to you know string Escape so I canthen put in a CSV data prep that'sreally where I've uh you know saved themost time I always like to say that youknow the goal of these tools they're notto replace you they're to acceleratewhat you're doing so you can get to youknow the the more magic States quickerokay so ask thought leaders up here onstagewhat are your largest concerns lookingforward and what would you recommend topeople as they're evaluating these toolsand where to go with this technologymanagermanage your relationship to Hype yeahlower expectations I mean so it's betterto over deliver than under you'reexpecting a 50 productivity Improvementtomorrow you will be sadly disappointedthat's not how this works do not ignorethe marketing pleaseeven ours you know all the all thebanking services we all use all Relianceon Mainframe somewhere and the Mainframeindustry has been through waves andwaves of modernization aspirations andmodernizations have happened andrefactoring has happened but nevermagicallyand so we're going to go through thatcycle again with Gen Ai and of coursethe ultimate destination is is torefactor a code with AI I mean that's anawesome destination and I know we willaspire to that it's a big dream it'sgreat let's see what we can dobut as you pace yourself into thatJourney just take some baby steps firstand collect some benefits and learn Imean there's a ton of change managementAssociated to this that is not about thepotential of the technology but justgetting mindshare in your organizationso that people adopt it and and so on sochange management and temper yourtemper the heightit's very Irwin answer anyone else wantto add on yeah I think for me uh my mybigger concern is quality of the outputsoyeah these tools are great and we'redoing a lot with it at GE Applianceswithin my team within productdevelopment everythingbut as probably everybody in this roomknows if you've messed with LMS at allno matter what architecture you put inplace our AG pattern any of that you'regoing to get hallucinations and myconcern is you know as as you say youknow hey there's going to be a lot ofnew people coming in so we're gonna bemore courageous right and be that'sgreat I totally agree with youI kind of Wonder thoughwhat's going to happen with vetting theoutputs right there's going to have tobe humans in place still obviouslythat's really looking at this output youknow did it really give me a rightarchitecture you know does it did itreally give me the right code or did itwrite a you know a forever while loopand then I didn't catch it rightsomething like that I mean you know I amconcerned about that the other thingespecially me being in an Enterpriselevelyou know I'm having a lot ofconversations with security andgovernance organization with you knowprivacy pii we deal with a lot of piiand we're very very concerned and veryserious about protecting that data andprotecting user input as they use AIproducts that we're developing and toolsEtc even with NRS DLC within my team I'mvery concerned about what we're doingwith our data and where it's Landing I'mvery happy with Google's position to behonest with you I'm glad you guys makeit very very clear that that data isstaying within the tenant it's not goingout it's not being you know trained inthe public model et cetera it's veryvery important for us but that is aconcern yeah I'll see there's threethings that keep me up nothing keeps meup really but the three things thatworry me with this first I don't want usto stop hiring interns and Junioremployees because we think llms do thework like I would have never gotten myshot if someone had looked at this yearsof experience we need people to give youa chance at this stuff and I don't wantus to look at these models and say wedon't really need college hires anymorewe can just have llms do the junior workno you want the junior work so thosefolks become awesome senior tech peopleso don't stop bringing new people inthat worries me that we're going to dothat same with this kind of touchdown wecannot give up our expertise becausewho's going to validate these thingsthis is not an excuse to get Dumber thisis kind of excuse to be like oh themodel will do it for me no this is anexcuse to know more and vet these modelsand make sure that that's good pythoncode that's a valid sequel statement wecan't forget that right I'm notinterested in working for the model themodel still works for me so I just wantto make sure we don't give that up aswell and then the last one I thinkthere's a good breakout with the Wayfairfolks where they did a one of thesehackathons as well and they had reallygood results the one score that was badwas initially the people using gen AIwere actually more frustrated than theones who weren't and it was because theywere just kind of handed the tools andthe hackathon no training no prep and soinitially it was like what the heck'sgoing on it's generating stuff thingsare happening they were ended up beingmore productive everything else wasbetterbut I worry that we're just going toshove this onto teams going I want 30productivity by Friday let's go this isgoing to be training this is going to bea new way of working and so we can'tjust treat this as an on off switch thisis a different way of working so I hopethat we hire great young people newpeople in the market I hope that we kindof think about how we train everybodyand then focus on expertise because weneed you all to be smart as ever not notless yeah I mean how many times have youhad to you know migrate to another toolas part of your your workflow andwere you happy about it yeahuh if I could just add one yeah youmentioned the word productivity a lotright andyou know I think we need to be very realabout that that is that is coming thatthat's here that is coming from you knowleadership from executive leadership Etcwho's looking at this and saying heywhy wouldn't you be 30 more productivenext year right and I think as Leadersespecially in your organizations it'sincumbent upon us to figure that outyeahit's it's not a play at you know heylet'sstop hiring you know and all that kindof stuff I'm not getting at that butwhat I am getting at is these tools arehereum we personally I'm seeing theproductivity uh capability out of thisand I do think it's important that wethat we work to figure that out how doyou measure thatyeah how do you know someone'sproductive at GE yeah um so again uh Ithink all of us in this room uh have tobe really careful about the metricsright metrics can get crazy people gamethe system Etc I've been in teams of heyhow many lines of code did you write youknow all this kind of stuffI think we've alldealt with that and maybe hopefully havemoved past that this is a new era itreally really is so for exampleum uh unit test right so uh I I don'tknow the exact name was it 20 30something like that of time on unittestscan we get it to five uh can we shortenour cycle times and our agile processbecause of this I'm really looking atthe business requirement side I know howmuch time it takes in my team to go frombusiness requirements to Pure technicalrequirements and actually start workit's 20 20 of our entire Project LifeCycle is that I can measure that prettyquickso I'm going to be looking at that andsaying how can we reduce that and let'sjust mob that and let's attack that andlet's figure it outyeah there's actually something you saidearlier I actually want to talk a littlebit more about you brought uphallucinations and you know I've beenwalking around the Expo for seen a lotof people in Industry you knowincorporate grounding into theirproducts so you know co-generation asidedo we have thoughts about you knowtalking about grounding is this going tobe relevant next year at nextwhat do you thinkwell step one I think there is a greatopportunity to tune those models withwhat you consider a good code base Imeanyou know Shameless plug I think we havea session tomorrow morning about how youcan use the Kodi model to start doingthat type of thingumso I think that's step one just to tryto drive quality that you think matchesthe standards of your organization thenyou have citation that's super helpfultooum but yeah grounding is making its wayin every gen AI conversation anywaywe we had a lot of conversation thisweek with a lot of customers aboutgrounding whatever those models tell youcould be code or something else so thatyou can try and draw a line between therecommendation and some actual factualreference so I think it's it's groundingis a topic for Jenny as a whole not onlyin this space yeah because I'd love tohear if you have anything to addI mean my favorite solution is executionwhich I know is very hard to accomplishbut the truth is after you generatedsoftware you can of course build you cantry to run integration tests end-to-endtestingperhaps the vantage point or rapid isyou can execute on the spot and that isfor me the best way to give back feedactual feedback to the user if the codeis correct or not I I do understand itdoesn't work in some of the use caseswe're talking about right now but it'suh it's a good path forward for smallerapplications and yeah I do believe alsolarger companies are gonna go in thatdirection as well over time butexecution is expensive I'm awarenice okay I think we'll have enough timefor maybe two more questions so we'llwrap it upoh this is my favorite question okay Iactually wrote this question first soit's really easy to start with new coderight if you want to generate somethingscratched with an empty filebutwhat's harder is maintaining the Legacycode base so do you have any thoughts oninnovation in this areadon't make me sing Legacy landwe humming that today uhyeah look it is easier to start fromscratch I guess from there's notechnical debt you're dealing with it'sharder to match the businessrequirements and things so sometimes itmakes sense to keep your legacy aroundand improve it where it is you knowwe've seen some good demonstrations aswell especially using duet to switchfrom something like a C plus plus app toa Go app and be able to change file byfile so I think that's a huge deal if wecan start taking advantage of upgradinglanguages Frameworks it's no fun to movefrom you know Java 8 to 17 and makethese different changes let alone gofrom C to job I mean those are toughmoves so if Jenny I can make that easierthat seems like a giant win let alonemaking the database changes like we'vetalked about switching from one databaseto another so this feels like this ismaybe the first time we have some reallylegit tools and and using llms to makethat switchat least to try it quickly sorry back toyour execution point it's we we dreamedabout those app modernization scenariosfor many years but between the day youdecide to try and the day you know it'sgonna pay off is it quite a long timeand here you can shorten that cycle andkind of make up your mind okay thissounds like a legit path so I think appmodernization will see will be Revisitedthanks to all of this sorry no no nothat's greatthe only thing I wanted to add is itdepends on how Legacy is Legacy in thesense that if you have to go back allthe way to Kabul and Fortran and we wantto you know to part that to somethingmodern there is literally not enoughcode out there to make another lamp aspowerful as we need and by the waymigrations in general are far from beingan easy problem but we have to becognizant of the fact that real Legacyis gonna take a lot of you know help ofGreece because you know Avalanche arenot that powerful in very old languagesso I'm much more excited about the likethe duet example from yesterday C plusplus two python or like any other modernlanguage is way more attainable than youknow old school Finance systems whichare very hard to migrate and that's thereason why they're still in Kabul todayyeah it might be frisky too I've triedto go from go back to Cobaltit works maybe we can finally rewritethose poor train systems right thelongest project I was on at Google isactually a three year rewrite frompython to go and you know wewe're at the source and it can stilltake a long time yeah yeahokay you know if I could add one thingon a legacy side soyeah Legacy code everybody has it we gotto deal with it and you know thedeveloper keynote out that was veryentertaining and awesomeum talking about Legacy I look at it ina couple ways one I actually look at itfrom the perspective of how fast can Iramp up new hires in my team on ourLegacy code baseum I mean how long does that take todayfor your teams rightum it can take a while right especiallyif you have a large domain like you knowthe platform I'm dealing with is is notsmall by any meanswe're looking at and we've startedintegrating generative AI capabilitiesacross our code base to actually helpwith documentation to help withonboarding to help with ramp UPSeverything which just minimizes andshortens that that ramp up time right soI look at Legacy in that way we're goingto deal with Legacy you know conversionsI think the Kodi you know apis and stuffdo great job with that obviously thedemos installed duet I'm excited abouttrying that but I'm really much moreexcited about how generative AI ishelping with onboarding resources that'ssuch a killer point because arguablythat's what everybody in this room cando right now is you can open up a filein vs code have duet enabled and saywhat does this file do yeah and get asummary yeah I can take that gnarliestweirdest query with 12 inner joins anddrop it in and go what does this querydo and you get an answer like that ishuge when I'm just trying to learn acode base because that's very good Ican't go interview that developer whoretired three years ago right that's areally good one yeahI'm I'm excited to see when we canreally pull this up to like what doesthis module do what does the service dothat's the next step right because whenyou have to do these migrations it'slike doing surgery if you you aren'tprecise you can really make some someerrors yeah you're a psychologist anarchaeologist if you're doing Legacystuffokayokayreally this is my surprise question Istill haven't exited Bim on my laptop Ican take it out yeahthis could take one hour yeah I knowright are you sure you want to do thisnext one Tabs are spaces or spaces yeahlet's start we'll start a fight up hereum are there any we have a few minutesstill so are there any other topics youknow based on our discussion that we hadtoday that we want to we want to discussany final thoughts you want to get outyeahlook I I think maybe aa lot of stuff for me would beumwe've got to get in there and just playwith this stuff I mean we've got to givethe space for our teams to do that andlet them be Innovative you know we haveait's amazing like I just Unleashed myteam and just like hey just go innovatewith this right I gave him the time justlike go do it and they came up the mostamazing things rightum particularly around our hackathon andoutside of that I think that we reallyif you're not doing that you got tostart doing that rightum and get just get in there and getyour hands dirty with this stuff andyou know figure out within your sdlcwhat you need to do you know to toimprove it using general AImaybe we can ask like how many of you inyour teams have had a time to justexplore how this can change your sdlclikea little bit yeah yeah maybe maybemaking time for thatyeah any leaders in the room I would saycarve out the time for your teamssay the other thing to be careful of isI don't think we want to be here a yearfrom now whatever it is April when we dothe next one and you have to be do it onpurpose but if you go and buy Best ofbreed things for every part of the sdlcyou still may be waking up in a yearwith 12 different models that you aretraining securing tuning maintaining Idon't think that's what you want to doso if you're going to do it do it onpurpose but do think about like hey doyou want to take a platform approach arethere things that do SRE work and Devwork are there things that can help mewith brainstorming and do other thingsyou might look for where I can domultiple things with one or two or threemodels so I just don't think you'regoing to want to deal with a dozen ofthem they'll have to be tuned separatelymaintained separately we're absolutelyheading in that direction in a lot ofways because there's an amazingecosystem of products and tools whichare awesome but just be intentionalabout what you're doing there yeah Ididn't think we'd sip through thosequestions so what other things are youexcited about that's coming soonwell II want to hear more of those storiesyeah you know it's all about we foundthe part of the process we proved toourselves yeah that's great we're goingto be better at this I think this iswhat matters honestly uhfor me it has to make sense in real lifethe promise is why a lot of people agreewith itI just want to see it happening so I'drather have you know dozens of peoplesaying this part of the like requirementGathering is where we've made thedifference having that would be betterthan having a large crowd believing thatthis may change their life someday Ithink we need to get into it and pickthe pieces and and start thinking how doI integrate that in the everyday life ofthe developer that's what I'm excitedabout the actual projects yeah and themultiple pieces right because if we madecoding 50 better the average Dev spends20 to 30 percent of their day coding soI bet you've only fixed a third of theira third of their day so you think aboutcan we improve the other parts theunnecessary meetings you know thetesting stuff the fire fighting in prodlike when that stuff the whole sdlc getsbetter that's when you might actuallyget that 30 productivity Improvementimpossible from a coding assistantthat's why I'm not in sales but you'renot gonna that's not gonna happen you'renot gonna buy a coding assistant andimmediately be 30 better you're just youdon't code all day and so how can youlook a little wider and if you do thatabsolutely you're going to be amazing heeven was just context switching this isa metric that I know our engineeringproductivity team at Google looks atvery quick uh very closely how manytimes do we contact switch how can wereduce that how can we get devs uh tohave a longer Flow Statethat's right what is the three things wemeasure we measure speed for developersinternally quality of their code and theease of their tools that's how GoogleEngineers are measured so if you thinkof the metrics around those thingsthat's this whole cycle that's not justhow fast you're in your IDEa if you're interested in this inparticular uh the Google engineeringproductivity research team has publishedpapers on you know what we trackinternally uh they're very quantitativeuh it's very it's a really great readwell thank you everyone thank you thankyouthank youforeign"
}