{
    "title": "Scale AI with Ray on Vertex AI",
    "presentation_type": "Breakout",
    "categories": [
        "AI and ML",
        "AIML206"
    ],
    "video_id": "D11NJ6mc5P4",
    "time": "Aug 30 03:00 PM - 03:45 PM CDT",
    "transcript": "foreign[Music]vertex AI we want to tell you about howeasy it is to scale AI from laptop toCloud by bringing Ray and vertex AItogetherI know there are many other interestingand exciting sessions out there rightnow but you're choosing to be here meansa lot to me we wouldn't be here withoutyou so thank you for thatI'm Chris product manager in vertex Aiand this is hi everyone I'm Nina I'm asoftware engineer at vertex AInow uh how many of you guys have heardof vertex AI raise your handkeep your hand up there keep your handup there how many how many of you guyshave heard of Raywow very cool now keep your hand up keepyour hand up keep your hand up if youare using Rey in productionokay very cool thank you very much Ihope to see a lot more hands next yearuh once we you know let our rayon vertexout there in the world and you guys areusing itwell I'm excited to tell you about rayonvertex AI my team's been working reallyhard to show this to the world and I'mvery very happy to tell you about ittodaybefore we get into the details of Ray wewould like to provide you all with somecontext first I will walk you through anoverview of Ray then Chris will gothrough an overview of vertex lastly wehave a demo to show you exactly how itworks and how you can use rayon vartek'sAIso what is Rey it sounds like a lot ofyou here in the audience might know Raypretty well but for those of you whodon't I'll explain what Ray is all aboutraise an open source unified distributedcomputing platform for python workloadscommonly used for ML workloads Ray makesit easy to create ml flows in adistributed and parallelized way andincludes libraries to handle commonmachine learning tasksso let's define some Ray Basics andterms we will use throughout thispresentation so that we're all on thesame pageI'm going to start with the ray clusterarray cluster is a set of nodes that runRay code array cluster can live on yourlaptop on kubernetes or in the cloudfor our purposes today re clusters onvertex will live on Google Cloudlet's move on to Ray core Ray core is anopen source python library fordistributed computing for rightapplicationsraycor helps paralyze and acceleratepython workloadslastly we have Ray air error stands forAI runtime rate air Builds on thedistributed computing of Ray core for AIand ML workloads and provides tools formachine learning that include dataprocessing training tuning reinforcementlearning and servingso I'll talk a bit more about the raycluster which is made up of Ray nodes wehave two different types of nodes eachRay cluster has to have one head nodeand can have multiple worker nodesworker nodes run rate code as well asattributed scheduling and they each havetheir own Object Storearray head node has the same functionsas the other nodes but also additionallyruns cluster management and Driverprocesses for the worker nodesmoving on to Ray core as I mentionedbefore Ray core is the low-level libraryfor building distributed systems Raycore is made up of a few Primitives liketasks and actorsdata objects are stored in paths betweennodes in object references Ray core isreally what makes Rey fast and efficientokay I think that's enough definitionslet's see what some Ray code looks likeas many of you know the cool thing aboutRay is that you can parallelizecomputation easily for example what I'llshow you here is some image rotationon the box to the right on topwe have a simple python function to readan image from a file and rotate theimage we run this function on a list ofimage files so the operation computessequentially naturally rotating a bunchof images in sequence can take some timemoving to the bottom section here on theright we're going to reify our codewe can do this with just a few smallchanges to achieve paralyzed computationthe code will now run in a distributedway on our Ray cluster across of all ournodes in our clusterin the blue you can see that we add Rayremote in our code to indicate that thisfunction is now remanaged and we willexecute on the ray cluster remotely andacross different nodesthe function contents otherwise remainpretty much the samenow we've talked about the right clusterwe've talked about Ray core and we'veseen how easy ray makes it toparallelize codelet's talk some more about right air andshow you that Ray air makes efficientmachine learning code just as simple asthe python code we just sawright air Builds on top of thedistribution power of Ray core and addssimple libraries for raid data traintuning and servingRay air code includes Integrations withpopular ml Frameworks like xgboosttensorflow and pytorch I'm sure theaudience sees some icons they mightrecognize in the left of this diagramon the right we can see examples ofusing Ray data to process a large dataset and pre-process data next we can seean example of Ray train to train an XGboost model we have Ray tuned for hyperparameter tuning and last we have raceserve for deploymentall of these steps happen with just twoor three lines of code it's awesome howsimple Rey makes machine learning in ourdemo we're going to show you how asimilar flow runs on vertex AI now thatwe've talked about Ray I'll pass it overto Chris to talk more about vertexthanksI want to tell you a little bit aboutvertex Ai and gcp's Mission and how wefit into ityou might have seen this before gcp'smission is to helpaccelerate organization's ability todigitally transform its business and oneof the best ways I've seen customersachieve this goal is to deploy AI in areal world real world settings andenabling their businesses and theirpeople to become AI creatorsfrom infrastructure to train and tuneyour models all the way up to trained AIagents ready-made for Enterprise usecases vertex AI has all the toolings youneednow I want to take our Focus to the AIplatform and then look it a little bitcloserAI platform includes the ml platformthat provides the end-to-end managed mlOps experienceand in the Green Building on top of thatan integrated gen AI experience throughmodel garden and gen AI Studioand we are continuing to build out andinvesting in this platform in four keyareas the data to AI experience toaccelerate time to value and the wholemanaged end-to-end mlaps experience togovern AIscalable and open infrastructure andlastly provide state-of-the-art AI tohelp customers innovateno matter where you are in your AIJourney you can find something useful invertex AInow to put money where the mouth isabout scalable and open infrastructurewe're investing not just in open opensource models but also integrating withpopular open source Frameworks likerightso that you as AI creators can build andscale faster in your AI Journeynow before we go into talking about rateon vertex AI I have a I have a littleconfession to make in my LinkedIn itsays I have a master's degree in CS butI gotta say I barely Ijust passedbecause of thisevil core is called intro to OSoperating systemsbuild this Questtwice I had to drop it outhomework that you do is you have towrite parallelization code distributedcomputing framework in Cand I could not figure this outnowthis is what I knew that I could neverbe an engineer or be a data scientistlike you guysstill don't know how to write this in CEbut I I can do this in Rey so evena dumb PM like me can paralyze my codehow much more can you guys do with Rayrightand we're bringing this together uh withRay and vertex and power vertex andready together so that we are providingthese capabilities to youand I'm so excited to announce publiclytoday uh the vertex is committed tosupport Ray as a first class productrayon vertex AI is three E's easy to useuh engineer for AI creators andEnterprise ready and my team createdthis product with Ray users in mind sothat any existing Ray code can be usedwith just one line or minimal changeand you can see it on the top left andthe radar in it and all you have to dois provide a Vertex rate Target and thenyou can connect and talk to the array onvertex AI clusternow let's take a quick comparisonbetween the setup process of the OSS Rayand Ray on vertexalike any cluster or rate cluster setupyou gotta do the basics in the green boxthat's a non-negotiable you have to setup your networking IAM and all the infostuff that you have to do now you stillhave to do additional steps with byproviding resources like VMS and disksand start Ray head and work on workersin the notes set up utility functionslike Jupiter lab and OSS dashboardconnect to the logging monitoring and beable to collect all that informationand lastly control yourinfrastructure costs through providingturndown commands and schedulingand it's all finding good if you want todo all that work that's more power toyouwith rayon vertex AI though you do nothave to worry about any of that stuffbecause we take care of all of thesethings for you when you create randomvertex cluster through our python SDK orUI it already provides an integratedexperience with collab Cloud loggingCloud monitoring and we even take careof the idle shutdowns and near zeroscaling so that you don't have to worryabout itwe made this so that you can focus onthe most important aspect of your workwhich is to be an AI creatornowthey say picture is worth a thousandwords andI think a demo is worth a thousandpresentations so we got three demos foryou so I think this demo is worth like 3000 presentationsso Nina is going to show you how tocreate the ray the array cluster throughthe UI BQ integration and lastly asimple end-to-end XG boost exampleall right then what time let me uh turnit over to you Nina thank you Chris wethink that rayon vertex AI combines theease and simplicity a vertex of Rey withthe managed capabilities of vertex I'mgonna head over to our demo nowI'm going to show you three demosum the first one will be creating a raycluster the second one will be showingyou our native bigquery integration andthe third one is going to be a fullend-to-end machine learning flowso let's start out with creating arraycluster so I'm in our Google Cloudconsole I'm already on the rayon vertexAI page but if you scroll down to manageyou can also get to this rayon vertex AIpage from here I can go ahead and createarray clustersetting up a ray cluster is reallysimple it only takes three steps thefirst one is selecting a name for ourcluster and a regionso I'll go ahead and do thatthe second is choosing machine types forthe head node and worker nodes that Idescribed earlier in the right clusterso here I can choose from differentmachine types and I can also choose gpusand accelerators if I want here's a listof some accelerator typesyou can also choose disk typesnow our worker pools correspond to therayworker nodes that I had discussedbefore so here I can also choose machinetypes and accelerators and disks as wellthe replica count corresponds to howmany machines we have of each machinetype so if I had three I would havethree worker nodes in this worker poolI'll continue on to the third and finalstep which is configuring security andnetworking I can choose a serviceaccount if I want and I can also connectto a networkso I'll go ahead and create this clusterso while that'sprovisioning here this can take a fewminutes so I'm going to show you some ofthe running clusters we already haveshowing you the specs of this cluster wecan see that we haveRay version 2.4 and python version 310.we also have this machine type that I'veselected and in my work group pools forthis cluster I selected a V100acceleratorback on the main page you can also see abutton open in colab Enterprisewe've integrated with collab Enterpriseto make interacting with your raycluster really easywe have a collab runtime template thatprovides array version python versionand you're not working already set upfor youhere I can show you a runtime templateyou can see we have a bunch of them setup here with our networking our pythonversionand our Ray version here on the rightfrom these runtime templates you can goahead and create a notebook from scratchbut for the purpose of the demo we'vealready pre-loaded a notebook for youokay so let's get into it now that I'vecreated a right cluster I want to goahead and connect to it so first I'mgoing to set uparray and our vertex AI SDK so I justran that cell initialized our vertex AISDK as well now I'm going to check thatRay's installed and our Ray version is2.4this is the fun part we're going toactually connect to our rate clusterjust using one line right knit and we'lladd in the address of that cluster wejust createdyou can see it's connected[Music]off the ray version of the right clusterand a link to the open source Raydashboard this dashboard gives us moreinformation about what's going on inyour cluster what jobs are running howmany resources are used we also providea link to our interactive terminal URIand you can log on to SSH into arrayhead node to do some debuggingmoving on now that we're connected wecan actually run some really simplearray code on this clusterso here I have a function to square someintegers and I'm going to do it in fourparallel Square tasksum I'll X Out the spot and you can seethe output here 0 1 4 9.we also have a second simple functionjust to do a Hello World and combinethat with the squaring functionthat was the first part of our demo fromthis part you can see how easy it is tocreate a right cluster on the UIconnect to it on our collab and run somesimple codenow we'll get into the second part ofour demoI'm going to show you how we haveintegrated bigquery seamlessly with RaydataI'm going to run some setup here then Iwill get into raid data bigquery read sowhat we do here is you can seamlesslyread data from bigquery into array datatableRay data needs a data source typicallyopen source Ray users have to useexisting data source like mongodb S3 ora CSV filewe read seamlessly from bigquery and wealso incorporate the parallelism part ofarray data in our integration as wellthis will take a few seconds to run hereokay awesome it seems like it done andit only took 13 secondsnext we'll get into Ray data transformwe also support Ray data transforminghere and you can see that the mappingand shuffling functions of Ray data arealso supportedlast we will get into our Ray databigquery right we can write back tobigquery people might want to do thisafter doing batch prediction or doingsome data transformationthis also will take a few seconds it'swriting 569 rows hereokay that was pretty quickum and that's the second part of ourdemo moving on to the last and finalpart here I'm going to show you asimilar example to the ray airend-to-end machine learning flow weshowed you before I think this is reallyvaluable because it shows you that youcan use rate air machine learning codewith very minimal modifications on rayonvertex AI which makes it very easy toscaleso I already showed you how Ium loaded data from bigquery transformedit and wrote it back now I'm going touse that same data source to preparesome data sets for our training of ourmodelso I'll run this this sets up a trainingdata set a validation data set and losta test data setthen I'm going to use a providedpreprocessor from the ray data LibraryI'll add in a standard scalar here andthat'll normalize my datanow that we've done our setup we canactually go ahead and train our model sowe're going to train a binary classifierhere that has 30 input features in theinput data this is an XG boost model andthis code was taken from the ray opensource documentations you can see onceagain how it seamlessly runs on vertexthis will I think take maybe 15 secondsyou can see it's going throughumsome training herescrolling up just a bit we included someactually boost specific parameters ourdata sets and our preprocessorseems like this has finished already andwe've trained our modelnext up is Ray tune we can use retunefor hyper parameter tuning Our modelso I'll run these cellsthis one takes a little bit longer torun so I'm going to show you an outputfrom a cluster we ran earlier todayforeignyou can see down here that we ran hyperparameter tuning on five trials andscrolling downwe have five trials herewith different train log loss and validlaw glossand once our hyper parameter tuning iscomplete we're going to choose the bestresult and use that for our final modelnext we're going to upload the model tothe vertex model registryum and register the model within vertexAIand this step can take some time so onceagain I'm just going to show the outputbut once the model is inthe model registry we can just deploy itto an end point and then use it for livepredictionsso in this output you can see that we'recreating an endpointand it takes a few minutes and then onceour endpoint is ready you can see thisendpoint object now this endpoint objectis ready to be used for live predictionsso I'm going to pass in some test datayou can see this is what the data setlooks like with 30 input featuresthen I'm going to pass in a predictionrequestand then our endpoint comes out with allof these predictionsso you can see that this last demoshowed the full machine learningend-to-end flow from these three demosyou've seen how we can create arraycluster really easily how we canintegrate with bigquery and Ray data andlastly how we can run that full machinelearning end-to-end flow I'll hand itback to Chrisawesome awesome thank you Ninait's not uh easy giving live demosshould a wonderful Jeff thank you somuch I really really appreciate thatall right so as you saw rayon vertex AIis easy to get started and just get yourcode running we have many NativeIntegrations that you saw from this codewith vertex and gcp products and manymore are on the way now some of you maybe wondering how can I use this in mycontext in my company so let me tell youone example of customers that we talkedearlier this year that we got to showram versus Ai Ai and you know they werereally excited about it and let me giveyou some context here sohow many of you heard of Dometic by anychancethere we go we got one person thank youvery much so the medic what they do isthey managecustomer supply chain and they have theyhave robots that you see that arerunning around in the warehousesmanaging inventory doing pickpackingprocesses and whatnot and they're doingsomething really cooluh what they're doing withwith Ray is it their training andreinforcement learning agent to bedeployed in each of these robots to helptheir processesand when I was showing them our roadmapwhere we're going at rayon vertex AI uhthe team really found it exciting andthey're excited to use and are using uhus to scale up and to manage differentRL agents for their use case so thatthey can serve their customers and helpthem deliver more valueall right so sum up our time together Iwant to leave you with this so if youremember nothingnothing else from this session I want tohelp you remember threes threes righteasy to useengineer for AI creators Enterpriseready is it easy to use use engineer forAI creators and Enterprise ready as yousaw through with Nina's demo using Rayto deliver end-to-end AOSnow it's even easier with vertex AItaking care of some of the setup burdensfor youso that you as AI creators can focus onwhat matters the mostlastly we want to make sure your mostimportant work runs on a secure scalableand reliable platform and vertex AI isthe place to do sopreview version of rayon vertex AI willbe available in September we got someexciting Integrations that that arehappening that I can't talk about justyet but you'll find out through the uhthe preview refresh in q1 and ga nextyearplease check out amazing Karthik andthen shot Karthik ranger please raiseyour hand the combo session and AIML 124please go to my boss and my boss'sBoston session so that maybe uh maybethey'll give me some bonus points forgetting more people in thereand please come check us out at theShowcase Booth my good friends IvanMikhail and sujit will show to show howto tune open llama with pi torch butunlike ninjas a llama 2 demo I thinkthis llama has a lot of drama be becauseit's using Ram vertex Ai and I thinkthat's a big deal well thanks for theopportunity for us to tell you about Ramvertex Ai and see you at the collabsession and Showcase Theaterforeign"
}